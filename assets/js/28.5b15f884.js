(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{454:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h3",{attrs:{id:"一、git概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、git概述"}},[t._v("#")]),t._v(" 一、Git概述")]),t._v(" "),a("h4",{attrs:{id:"_1、git简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、git简介"}},[t._v("#")]),t._v(" 1、Git简介")]),t._v(" "),a("p",[t._v("Git是一个分布式版本控制工具，通常用来对软件开发过程中的源代码文件进行管理。通过Git仓库来存储和管理这些文件，Git仓库分为两种:")]),t._v(" "),a("ul",[a("li",[t._v("本地仓库：开发人员自己电脑上的Git 仓库")]),t._v(" "),a("li",[t._v("远程仓库：远程服务器上的Git仓库")])]),t._v(" "),a("p",[t._v("commit：提交,将本地文件和版本信息保存到本地仓库")]),t._v(" "),a("p",[t._v("push：推送,将本地仓库文件和版本信息上传到远程仓库")]),t._v(" "),a("p",[t._v("pull：拉取,将远程仓库文件和版本信息下载到本地仓库")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/git/git%E6%A6%82%E8%BF%B0/git%E7%AE%80%E4%BB%8B.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_2、git下载与安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、git下载与安装"}},[t._v("#")]),t._v(" 2、Git下载与安装")]),t._v(" "),a("p",[t._v("下载地址：https://git-scm.com/download")]),t._v(" "),a("p",[t._v("安装完成后在任意目录点击鼠标右键，如果能看到如下菜单则表示安装完成：")]),t._v(" "),a("ul",[a("li",[t._v("Git GUI Here：打开Git图形界面")]),t._v(" "),a("li",[t._v("Git Bash Here：打开Git命令行")])]),t._v(" "),a("h3",{attrs:{id:"二、git代码托管服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、git代码托管服务"}},[t._v("#")]),t._v(" 二、Git代码托管服务")]),t._v(" "),a("h4",{attrs:{id:"_1、常用的git代码托管服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、常用的git代码托管服务"}},[t._v("#")]),t._v(" 1、常用的Git代码托管服务")]),t._v(" "),a("p",[t._v("Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库呢?")]),t._v(" "),a("p",[t._v("我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。")]),t._v(" "),a("ul",[a("li",[t._v("gitHub(地址: https://github.com/ )，是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名gitHub")]),t._v(" "),a("li",[t._v("码云（地址: https://gitee.com/ )，是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快")]),t._v(" "),a("li",[t._v("GitLab(地址: https://about.gitlab.com/ )，是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务")]),t._v(" "),a("li",[t._v("BitBucket(地址: https://bitbucket.org/)，是一家源代码托管网站，采用Mercurial和Git作为分布式版本控制系统，同时提供商业计划和免费账户")])]),t._v(" "),a("h4",{attrs:{id:"_2、使用码云代码托管服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用码云代码托管服务"}},[t._v("#")]),t._v(" 2、使用码云代码托管服务")]),t._v(" "),a("p",[t._v("注意：每个Git远程仓库都会对应一个网络地址，点击【克隆/下载】按钮，在弹出窗口点击【复制】按钮获得网络地址")]),t._v(" "),a("p",[t._v("前面已经在码云上创建了自己的远程仓库，目前仓库成员只有自己一个人(身份为管理员）。在企业实际开发中，一个项目往往是由多个人共同开发完成的，为了使多个参与者都有权限操作远程仓库，就需要邀请其他项目参与者成为当前仓库的成员。")]),t._v(" "),a("h3",{attrs:{id:"三、git常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、git常用命令"}},[t._v("#")]),t._v(" 三、Git常用命令")]),t._v(" "),a("h4",{attrs:{id:"_1、git全局设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、git全局设置"}},[t._v("#")]),t._v(" 1、Git全局设置")]),t._v(" "),a("p",[t._v("当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息。")]),t._v(" "),a("p",[t._v("在Git命令行中执行下面命令:")]),t._v(" "),a("ul",[a("li",[t._v('设置用户信息\ngit config --global user.name "itcast"\ngit config --global user.email "hello@itcast.cn"')]),t._v(" "),a("li",[t._v("查看配置信息\ngit config --list")])]),t._v(" "),a("p",[t._v("注意:上面设置的user.name和user.email并不是我们在注册码云账号时使用的用户名和邮箱，此处可以任意设置。")]),t._v(" "),a("h4",{attrs:{id:"_2、获取git仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、获取git仓库"}},[t._v("#")]),t._v(" 2、获取Git仓库")]),t._v(" "),a("p",[t._v("要使用Git对我们的代码进行版本控制，首先需要获得Git仓库。\n获取Git仓库通常有两种方式:")]),t._v(" "),a("ul",[a("li",[t._v("在本地初始化一个Git仓库（不常用)")]),t._v(" "),a("li",[t._v("从远程仓库克隆（常用)")])]),t._v(" "),a("h5",{attrs:{id:"_2-1-获取git仓库-在本地初始化git仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-获取git仓库-在本地初始化git仓库"}},[t._v("#")]),t._v(" 2.1 获取Git仓库-在本地初始化Git仓库")]),t._v(" "),a("p",[t._v("执行步骤如下:")]),t._v(" "),a("ol",[a("li",[t._v("在任意目录下创建一个空目录（例如repo1）作为我们的本地Git仓库")]),t._v(" "),a("li",[t._v("进入这个目录中，点击右键打开Git bash窗口")]),t._v(" "),a("li",[t._v("执行命令git init")])]),t._v(" "),a("p",[t._v("如果在当前目录中看到.git文件夹（此文件夹为隐藏文件夹）则说明Git仓库创建成功")]),t._v(" "),a("h5",{attrs:{id:"_2-2-获取git仓库-从远程仓库克隆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-获取git仓库-从远程仓库克隆"}},[t._v("#")]),t._v(" 2.2 获取Git仓库-从远程仓库克隆")]),t._v(" "),a("p",[t._v("可以通过Git提供的命令从远程仓库进行克隆，将远程仓库克隆到本地")]),t._v(" "),a("p",[t._v("命令形式:git clone【远程Git仓库地址】")]),t._v(" "),a("h4",{attrs:{id:"_3、工作区、暂存区、版本库概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、工作区、暂存区、版本库概念"}},[t._v("#")]),t._v(" 3、工作区、暂存区、版本库概念")]),t._v(" "),a("p",[t._v("为了更好的学习Git，我们需要了解Git相关的一些概念，这些概念在后面的学习中会经常提到")]),t._v(" "),a("ul",[a("li",[t._v("版本库：前面看到的.git隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等")]),t._v(" "),a("li",[t._v("工作区：包含.git文件夹的目录就是工作区，也称为工作目录，主要用于存放开发的代码")]),t._v(" "),a("li",[t._v("暂存区：.git文件夹中有很多文件，其中有一个index文件就是暂存区，也可以叫做stage。暂存区是一个临时保存修改文件的地方")])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/git/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E6%9A%82%E5%AD%98%E5%8C%BA%E7%89%88%E6%9C%AC%E5%BA%93%E6%A6%82%E5%BF%B5.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_4、git工作区中文件的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、git工作区中文件的状态"}},[t._v("#")]),t._v(" 4、Git工作区中文件的状态")]),t._v(" "),a("p",[t._v("Git工作区中的文件存在两种状态：")]),t._v(" "),a("ul",[a("li",[t._v("untracked 未跟踪（未被纳入版本控制)")]),t._v(" "),a("li",[t._v("tracked已跟踪（被纳入版本控制)\n"),a("ul",[a("li",[t._v("Unmodified未修改状态")]),t._v(" "),a("li",[t._v("Modified已修改状态")]),t._v(" "),a("li",[t._v("Staged 已暂存状态")])])])]),t._v(" "),a("p",[t._v("注意：这些文件的状态会随着我们执行Git的命令发生变化")]),t._v(" "),a("h4",{attrs:{id:"_5、本地仓库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、本地仓库操作"}},[t._v("#")]),t._v(" 5、本地仓库操作")]),t._v(" "),a("p",[t._v("本地仓库常用命令如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("git status\n查看文件状态")]),t._v(" "),a("p",[t._v("git status命令用于查看文件状态")])]),t._v(" "),a("li",[a("p",[t._v("git add\n将文件的修改加入暂存区")]),t._v(" "),a("p",[t._v("git add命令的作用是将文件的修改加入暂存区")])]),t._v(" "),a("li",[a("p",[t._v("git reset\n将暂存区的文件取消暂存或者是切换到指定版本")]),t._v(" "),a("p",[t._v("git reset命令的作用是将暂存区的文件取消暂存或者是切换到指定版本")])]),t._v(" "),a("li",[a("p",[t._v("git commit\n将暂存区的文件修改提交到版本库")]),t._v(" "),a("p",[t._v("git commit 命令的作用是将暂存区的文件修改提交到版本库")])]),t._v(" "),a("li",[a("p",[t._v("git log\n查看日志")]),t._v(" "),a("p",[t._v("git log命令的作用是查看日志")])])]),t._v(" "),a("h4",{attrs:{id:"_6、远程仓库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、远程仓库操作"}},[t._v("#")]),t._v(" 6、远程仓库操作")]),t._v(" "),a("p",[t._v("前面执行的命令操作都是针对的本地仓库，本节我们会学习关于远程仓库的一些操作，具体包括：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("git remote\n查看远程仓库")]),t._v(" "),a("p",[t._v("如果想查看已经配置的远程仓库服务器，可以运行 git remote 命令，它会列出每一个远程服务器的简写。如果已经克隆了远程仓库，那么至少应该能看到origin，这是Git克隆的仓库服务器的默认名字。")])]),t._v(" "),a("li",[a("p",[t._v("git remote add\n添加远程仓库")]),t._v(" "),a("p",[t._v("添加远程仓库，运行 git remote add <shortname><url> 添加一个新的远程Git仓库，同时指定一个可以引用的简写。")])]),t._v(" "),a("li",[a("p",[t._v("git clone\n从远程仓库克隆")]),t._v(" "),a("p",[t._v("如果你想获得一份已经存在了的Git 远程仓库的拷贝，这时就要用到git clone命令。Git 克隆的是该Git 仓库服务器」的几乎所有数据（包括日志信息、历史记录等），而不仅仅是复制工作所需要的文件。\n克隆仓库的命令格式是: git clone [url]")])]),t._v(" "),a("li",[a("p",[t._v("git pull\n从远程仓库拉取")]),t._v(" "),a("p",[t._v("git pull 命令的作用是从远程仓库获取最新版本并合并到本地仓库，命令格式：git pull [short-name] [branch-name]")]),t._v(" "),a("p",[t._v("注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories )")]),t._v(" "),a("p",[t._v("解决此问题可以在git pull命令后加入参数 --allow-unrelated-histories")])]),t._v(" "),a("li",[a("p",[t._v("git push\n推送到远程仓库")]),t._v(" "),a("p",[t._v("将本地仓库内容推送到远程仓库，可以使用命令：git push [remote-name] [branch-name]")])])]),t._v(" "),a("h4",{attrs:{id:"_7、分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、分支操作"}},[t._v("#")]),t._v(" 7、分支操作")]),t._v(" "),a("p",[t._v("分支是git使用过程中非常重要的概念。使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。同一个仓库可以有多个分支，各个分支相互独立，互不干扰。")]),t._v(" "),a("p",[t._v("通过git init命令创建本地仓库时默认会创建一个master分支。")]),t._v(" "),a("p",[t._v("本节我们会学习关于分支的相关命令，具体如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("git branch\n查看分支")]),t._v(" "),a("ul",[a("li",[t._v("git branch\n列出所有本地分支")]),t._v(" "),a("li",[t._v("git branch -r\n列出所有远程分支")]),t._v(" "),a("li",[t._v("git branch -a\n列出所有本地分支和远程分支")])])]),t._v(" "),a("li",[a("p",[t._v("git branch [name]\n创建分支")]),t._v(" "),a("p",[t._v("创建分支命令格式：git branch [name]")])]),t._v(" "),a("li",[a("p",[t._v("git checkout [name]\n切换分支")]),t._v(" "),a("p",[t._v("切换分支命令格式：git checkout [name]")])]),t._v(" "),a("li",[a("p",[t._v("git push [shortName] [name]\n推送至远程仓库分支")]),t._v(" "),a("p",[t._v("推送至远程仓库分支命令格式：git push [shortName] [name]")])]),t._v(" "),a("li",[a("p",[t._v("git merge [name]\n合并分支")]),t._v(" "),a("p",[t._v("合并分支命令格式：git merge [name]")])])]),t._v(" "),a("h4",{attrs:{id:"_8、标签操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、标签操作"}},[t._v("#")]),t._v(" 8、标签操作")]),t._v(" "),a("p",[t._v("Git 中的标签，指的是某个分支某个特定时间点的状态。通过标签，可以很方便的切换到标记时的状态。")]),t._v(" "),a("p",[t._v("比较有代表性的是人们会使用这个功能来标记发布结点（v1.0、v1.2等)。下面是mybatis-plus的标签：")]),t._v(" "),a("p",[t._v("在本节中，我们将学习如下和标签相关的命令：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("git tag\n列出已有的标签")]),t._v(" "),a("p",[t._v("列出已有的标签可以使用命令：git tag")])]),t._v(" "),a("li",[a("p",[t._v("git tag [name]\n创建标签")]),t._v(" "),a("p",[t._v("创建标签可以使用命令：git tag [name]")])]),t._v(" "),a("li",[a("p",[t._v("git push [shortName] [name]\n将标签推送至远程仓库")]),t._v(" "),a("p",[t._v("将标签推送至远程仓库的命令格式：git push [shortName] [name]")])]),t._v(" "),a("li",[a("p",[t._v("git checkout -b [branch] [name]    检出标签")]),t._v(" "),a("p",[t._v("检出标签时需要新建一个分支来指向某个标签，检出标签的命令格式：git checkout -b [branch] [name]")])])]),t._v(" "),a("h3",{attrs:{id:"四、在idea中使用git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、在idea中使用git"}},[t._v("#")]),t._v(" 四、在IDEA中使用Git")]),t._v(" "),a("h4",{attrs:{id:"_1、在idea中配置git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、在idea中配置git"}},[t._v("#")]),t._v(" 1、在IDEA中配置Git")]),t._v(" "),a("p",[t._v("在IDEA中使用Git，本质上还是使用的本地安装的Git软件，所以需要在IDEA中配置Git。")]),t._v(" "),a("h4",{attrs:{id:"_2、获取git仓库-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、获取git仓库-2"}},[t._v("#")]),t._v(" 2、获取Git仓库")]),t._v(" "),a("p",[t._v("在IDEA中使用Git获取仓库有两种方式：")]),t._v(" "),a("ul",[a("li",[t._v("本地初始化仓库")]),t._v(" "),a("li",[t._v("从远程仓库克隆")])]),t._v(" "),a("h4",{attrs:{id:"_3、本地仓库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、本地仓库操作"}},[t._v("#")]),t._v(" 3、本地仓库操作")]),t._v(" "),a("p",[t._v("本地仓库操作：")]),t._v(" "),a("ul",[a("li",[t._v("将文件加入暂存区")]),t._v(" "),a("li",[t._v("将暂存区的文件提交到版本库")]),t._v(" "),a("li",[t._v("查看日志")])]),t._v(" "),a("h4",{attrs:{id:"_4、远程仓库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、远程仓库操作"}},[t._v("#")]),t._v(" 4、远程仓库操作")]),t._v(" "),a("p",[t._v("远程仓库操作：")]),t._v(" "),a("ul",[a("li",[t._v("查看远程仓库")]),t._v(" "),a("li",[t._v("添加远程仓库")]),t._v(" "),a("li",[t._v("推送至远程仓库")]),t._v(" "),a("li",[t._v("从远程仓库拉取")])]),t._v(" "),a("h4",{attrs:{id:"_5、分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、分支操作"}},[t._v("#")]),t._v(" 5、分支操作")]),t._v(" "),a("p",[t._v("分支操作：")]),t._v(" "),a("ul",[a("li",[t._v("查看分支")]),t._v(" "),a("li",[t._v("创建分支")]),t._v(" "),a("li",[t._v("切换分支")]),t._v(" "),a("li",[t._v("将分支推送到远程仓库")]),t._v(" "),a("li",[t._v("合并分支")])]),t._v(" "),a("h2",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),a("h3",{attrs:{id:"一、什么是linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是linux"}},[t._v("#")]),t._v(" 一、什么是Linux")]),t._v(" "),a("h4",{attrs:{id:"_1、什么是linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是linux"}},[t._v("#")]),t._v(" 1、什么是Linux")]),t._v(" "),a("p",[t._v("Linux是一套免费使用和自由传播的操作系统")]),t._v(" "),a("h4",{attrs:{id:"_2、为什么要学linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、为什么要学linux"}},[t._v("#")]),t._v(" 2、为什么要学Linux")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("企业用人要求")])]),t._v(" "),a("li",[a("p",[t._v("个人发展要求")])])]),t._v(" "),a("h4",{attrs:{id:"_3、学完linux后能干什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、学完linux后能干什么"}},[t._v("#")]),t._v(" 3、学完Linux后能干什么")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Linux/%E4%BB%80%E4%B9%88%E6%98%AFLinux/%E5%AD%A6%E5%AE%8CLinux%E5%90%8E%E8%83%BD%E5%B9%B2%E4%BB%80%E4%B9%88.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"二、linux简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、linux简介"}},[t._v("#")]),t._v(" 二、Linux简介")]),t._v(" "),a("h4",{attrs:{id:"_1、不同应用领域的主流操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、不同应用领域的主流操作系统"}},[t._v("#")]),t._v(" 1、不同应用领域的主流操作系统")]),t._v(" "),a("ul",[a("li",[t._v("桌面操作系统\n"),a("ul",[a("li",[t._v("Windows（用户数量最多）")]),t._v(" "),a("li",[t._v("Mac oS（操作体验好，办公人士首选）")]),t._v(" "),a("li",[t._v("Linux（用户数量少）")])])]),t._v(" "),a("li",[t._v("服务器操作系统\n"),a("ul",[a("li",[t._v("UNIX（安全、稳定、付费）")]),t._v(" "),a("li",[t._v("Linux（安全、稳定、免费、占有率高）")]),t._v(" "),a("li",[t._v("Windows Server（付费、占有率低）")])])]),t._v(" "),a("li",[t._v("移动设备操作系统\n"),a("ul",[a("li",[t._v("Android（基于Linux、开源，主要用于智能手机、平板电脑和智能电视")]),t._v(" "),a("li",[t._v("iOS（苹果公司开发、不开源，用于苹果公司的产品，例如：iPhone、iPad ）")])])]),t._v(" "),a("li",[t._v("嵌入式操作系统\n"),a("ul",[a("li",[t._v("Linux（机顶盒、路由器、交换机）")])])])]),t._v(" "),a("h4",{attrs:{id:"_2、linux发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、linux发展历史"}},[t._v("#")]),t._v(" 2、Linux发展历史")]),t._v(" "),a("p",[t._v("时间：1991年")]),t._v(" "),a("p",[t._v("地点：芬兰赫尔辛基大学")]),t._v(" "),a("p",[t._v("人物：Linus Torvalds （21岁）")]),t._v(" "),a("p",[t._v("语言：C语言、汇编语言")]),t._v(" "),a("p",[t._v("logo：企鹅")]),t._v(" "),a("p",[t._v("特点：免费、开源、多用户、多任务")]),t._v(" "),a("h4",{attrs:{id:"_3、linux系统版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、linux系统版本"}},[t._v("#")]),t._v(" 3、Linux系统版本")]),t._v(" "),a("p",[t._v("Linux系统分为内核版和发行版")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("内核版")]),t._v(" "),a("ul",[a("li",[t._v("由Linus Torvalds及其团队开发、维护")]),t._v(" "),a("li",[t._v("免费、开源")]),t._v(" "),a("li",[t._v("负责控制硬件")])])]),t._v(" "),a("li",[a("p",[t._v("发行版")]),t._v(" "),a("ul",[a("li",[t._v("基于Linux内核版进行扩展")]),t._v(" "),a("li",[t._v("由各个Linux厂商开发、维护")]),t._v(" "),a("li",[t._v("有收费版本和免费版本")])])]),t._v(" "),a("li",[a("p",[t._v("Linux系统发行版")]),t._v(" "),a("ul",[a("li",[t._v("Ubuntu：以桌面应用为主")]),t._v(" "),a("li",[t._v("RedHat：应用最广泛、收费")]),t._v(" "),a("li",[t._v("CentoS： RedHat的社区版、免费")]),t._v(" "),a("li",[t._v("openSUSE：对个人完全免费、图形界面华丽")]),t._v(" "),a("li",[t._v("Fedora：功能完备、快速更新、免费")]),t._v(" "),a("li",[t._v("红旗Linux：北京中科红旗软件技术有限公司开发")])])])]),t._v(" "),a("h3",{attrs:{id:"三、linux安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、linux安装"}},[t._v("#")]),t._v(" 三、Linux安装")]),t._v(" "),a("h4",{attrs:{id:"_1、安装方式介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装方式介绍"}},[t._v("#")]),t._v(" 1、安装方式介绍")]),t._v(" "),a("p",[t._v("Linux系统的安装方式")]),t._v(" "),a("ul",[a("li",[t._v("物理机安装：直接将操作系统安装到服务器硬件上")]),t._v(" "),a("li",[t._v("虚拟机安装：通过虚拟机软件安装")])]),t._v(" "),a("p",[t._v("虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能、运行在完全隔离环境中的完整计算机系统。")]),t._v(" "),a("p",[t._v("常用虚拟机软件")]),t._v(" "),a("ul",[a("li",[t._v("VMware")]),t._v(" "),a("li",[t._v("VirtualBoX")]),t._v(" "),a("li",[t._v("VMLite WorkStation")]),t._v(" "),a("li",[t._v("Qemu")]),t._v(" "),a("li",[t._v("HopeddotVos")])]),t._v(" "),a("h4",{attrs:{id:"_2、安装linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装linux"}},[t._v("#")]),t._v(" 2、安装Linux")]),t._v(" "),a("p",[t._v("安装方式-安装VMWare")]),t._v(" "),a("p",[t._v("直接双击运行资料中的VMware安装程序，根据提示完成安装即可。")]),t._v(" "),a("p",[t._v("安装CentOS镜像")]),t._v(" "),a("p",[t._v("使用资料中提供的CentOS镜像文件来完成Linux系统的安装。")]),t._v(" "),a("h4",{attrs:{id:"_3、网卡设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、网卡设置"}},[t._v("#")]),t._v(" 3、网卡设置")]),t._v(" "),a("p",[t._v("由于启动服务器时未加载网卡，导致IP地址初始化失败")]),t._v(" "),a("p",[t._v("修改网络初始化配置，设定网卡在系统启动时初始化")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /\t\t\t\t\t\t进入根目录\ncd etc\t\t\t\t\t\t进入etc目录\ncd sysconfig\t\t\t\t进入sysconfig目录\ncd network-scripts\t\t\t进入network-scripts\nvi ifcfg-ens33\t\t\t\t编辑ifcfg-ens33文件\n\ni\t\t\t\t\t\t\t进入编辑状态\n光标\t\t\t\t   \t\t   移动光标\n<ESC> -> ：wq -> <ENTER>\t\t保存退出\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 修改内容\nonboot=yes\n")])])]),a("h4",{attrs:{id:"_4、安装ssh连接工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、安装ssh连接工具"}},[t._v("#")]),t._v(" 4、安装SSH连接工具")]),t._v(" "),a("p",[t._v("SSH （ Secure Shell），建立在应用层基础上的安全协议")]),t._v(" "),a("p",[t._v("常用的SSH连接工具")]),t._v(" "),a("ul",[a("li",[t._v("putty")]),t._v(" "),a("li",[t._v("secureCRT")]),t._v(" "),a("li",[t._v("xshell")]),t._v(" "),a("li",[t._v("finalshell")])]),t._v(" "),a("p",[t._v("通过SSH连接工具就可以实现从本地连接到远程的Linux服务器")]),t._v(" "),a("h4",{attrs:{id:"_5、linux和windows目录结构对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、linux和windows目录结构对比"}},[t._v("#")]),t._v(" 5、Linux和Windows目录结构对比")]),t._v(" "),a("p",[t._v("Linux系统中的目录")]),t._v(" "),a("ul",[a("li",[t._v("/是所有目录的顶点")]),t._v(" "),a("li",[t._v("目录结构像─颗倒挂的树")])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Linux/Linux%E5%AE%89%E8%A3%85/Linux%E5%92%8CWindows%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%AF%B9%E6%AF%94.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_6、linux目录介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、linux目录介绍"}},[t._v("#")]),t._v(" 6、Linux目录介绍")]),t._v(" "),a("ul",[a("li",[t._v("bin 存放二进制可执行文件")]),t._v(" "),a("li",[t._v("boot 存放系统引导时使用的各种文件")]),t._v(" "),a("li",[t._v("dev 存放设备文件")]),t._v(" "),a("li",[t._v("etc 存放系统配置文件")]),t._v(" "),a("li",[t._v("home 存放系统用户的文件")]),t._v(" "),a("li",[t._v("lib 存放程序运行所需的共享库和内核模块")]),t._v(" "),a("li",[t._v("opt 额外安装的可选应用程序包所放置的位置")]),t._v(" "),a("li",[t._v("root 超级用户目录")]),t._v(" "),a("li",[t._v("sbin 存放二进制可执行文件，只有root用户才能访问")]),t._v(" "),a("li",[t._v("tmp 存放临时文件")]),t._v(" "),a("li",[t._v("usr 存放系统应用程序")]),t._v(" "),a("li",[t._v("var 存放运行时需要改变数据的文件，例如日志文件")])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Linux/Linux%E5%AE%89%E8%A3%85/Linux%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"四、linux常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、linux常用命令"}},[t._v("#")]),t._v(" 四、Linux常用命令")]),t._v(" "),a("h4",{attrs:{id:"_1、linux命令初体验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、linux命令初体验"}},[t._v("#")]),t._v(" 1、Linux命令初体验")]),t._v(" "),a("h5",{attrs:{id:"_1-1-几个常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-几个常用命令"}},[t._v("#")]),t._v(" 1.1 几个常用命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),a("th",[t._v("命令")]),t._v(" "),a("th",[t._v("对应英文")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",[t._v("ls")]),t._v(" "),a("td",[t._v("list")]),t._v(" "),a("td",[t._v("查看当前目录下的内容")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",[t._v("pwd")]),t._v(" "),a("td",[t._v("print work directory")]),t._v(" "),a("td",[t._v("查看当前所在目录")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",[t._v("cd [目录名]")]),t._v(" "),a("td",[t._v("change directory")]),t._v(" "),a("td",[t._v("切换目录")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",[t._v("touch [文件名]")]),t._v(" "),a("td",[t._v("touch")]),t._v(" "),a("td",[t._v("如果文件不存在，新建文件")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",[t._v("mkdir [目录名]")]),t._v(" "),a("td",[t._v("make directory")]),t._v(" "),a("td",[t._v("创建目录")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",[t._v("rm [文件名]")]),t._v(" "),a("td",[t._v("remove")]),t._v(" "),a("td",[t._v("删除指定文件")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("注意事项")]),t._v(" "),a("p",[t._v("在执行Linux命令时，提示信息如果显示为乱码，如右图所示：")]),t._v(" "),a("p",[t._v("这是由于编码问题导致，只需要修改Linux的编码即可，命令如下：")]),t._v(" "),a("p",[t._v("echo 'LANG=\"en_us.UTF-8\"' >> /etc/profile")]),t._v(" "),a("p",[t._v("source /etc/profile")])]),t._v(" "),a("h5",{attrs:{id:"_1-2-linux命令使用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-linux命令使用技巧"}},[t._v("#")]),t._v(" 1.2 Linux命令使用技巧")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Tab键自动补全")])]),t._v(" "),a("li",[a("p",[t._v("连续两次Tab键，给出操作提示")])]),t._v(" "),a("li",[a("p",[t._v("使用上下箭头快速调出曾经使用过的命令")])]),t._v(" "),a("li",[a("p",[t._v("使用clear命令或者ctrl+l快捷键实现清屏")])])]),t._v(" "),a("h5",{attrs:{id:"_1-3-linux命令格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-linux命令格式"}},[t._v("#")]),t._v(" 1.3 Linux命令格式")]),t._v(" "),a("p",[t._v("command [-options] [parameter]")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("command：命令名")]),t._v(" "),a("li",[t._v("[-options]：选项，可用来对命令进行控制，也可以省略")]),t._v(" "),a("li",[t._v("[parameter]：传给命令的参数，可以是零个、一个或者多个")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("p",[t._v("[]代表可选")]),t._v(" "),a("p",[t._v("命令名、选项、参数之间有空格进行分隔")])]),t._v(" "),a("h4",{attrs:{id:"_2、文件目录操作命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、文件目录操作命令"}},[t._v("#")]),t._v(" 2、文件目录操作命令")]),t._v(" "),a("h5",{attrs:{id:"_2-1-文件目录操作命令-ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-文件目录操作命令-ls"}},[t._v("#")]),t._v(" 2.1 文件目录操作命令 ls")]),t._v(" "),a("p",[t._v("作用：显示指定目录下的内容")]),t._v(" "),a("p",[t._v("语法：ls [-al] [dir]\n说明：")]),t._v(" "),a("ul",[a("li",[t._v("-a 显示所有文件及目录(.开头的隐藏文件也会列出)")]),t._v(" "),a("li",[t._v("-l 除文件名称外，同时将文件型态(d表示目录，-表示文件)、权限、拥有者、文件大小等信息详细列出")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：\n由于我们使用 ls 命令时经常需要加入 -l 选项，所以Linux为 ls -l 命令提供了一种简写方式，即 ll")])]),t._v(" "),a("h5",{attrs:{id:"_2-2-文件目录操作命令-cd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-文件目录操作命令-cd"}},[t._v("#")]),t._v(" 2.2 文件目录操作命令 cd")]),t._v(" "),a("p",[t._v("作用：用于切换当前工作目录，即进入指定目录")]),t._v(" "),a("p",[t._v("语法：cd [dirName]")]),t._v(" "),a("p",[t._v("特殊说明：")]),t._v(" "),a("ul",[a("li",[t._v("~ 表示用户的home目录")]),t._v(" "),a("li",[t._v(". 表示目前所在的目录")]),t._v(" "),a("li",[t._v(".. 表示目前目录位置的上级目录")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("cd ..\t\t\t\t\t切换到当前目录的上级目录")]),t._v(" "),a("li",[t._v("cd ~                    切换到用户的home目录")]),t._v(" "),a("li",[t._v("cd /usr/local      切换到/usr/local目录")])]),t._v(" "),a("h5",{attrs:{id:"_2-3-文件目录操作命令-cat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-文件目录操作命令-cat"}},[t._v("#")]),t._v(" 2.3 文件目录操作命令 cat")]),t._v(" "),a("p",[t._v("作用：用于显示文件内容")]),t._v(" "),a("p",[t._v("语法：cat [-n] fileName")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-n：由1开始对所有输出的行数编号")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("cat /etc/profile    \t查看/etc目录下的profile文件内容")])]),t._v(" "),a("h5",{attrs:{id:"_2-4-文件目录操作命令-more"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-文件目录操作命令-more"}},[t._v("#")]),t._v(" 2.4 文件目录操作命令 more")]),t._v(" "),a("p",[t._v("作用：以分页的形式显示文件内容")]),t._v(" "),a("p",[t._v("语法：more fileName")]),t._v(" "),a("p",[t._v("操作说明：")]),t._v(" "),a("ul",[a("li",[t._v("回车键\t\t\t\t  向下滚动一行")]),t._v(" "),a("li",[t._v("空格键\t\t\t\t  向下滚动一屏")]),t._v(" "),a("li",[t._v("b\t\t\t\t\t\t\t返回上一屏")]),t._v(" "),a("li",[t._v("q或者Ctrl+C\t\t 退出more")])]),t._v(" "),a("p",[t._v("举例：\nmore /etc/profile\t\t以分页方式显示/etc目录下的profile文件内容")]),t._v(" "),a("h5",{attrs:{id:"_2-5-文件目录操作命令-tail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-文件目录操作命令-tail"}},[t._v("#")]),t._v(" 2.5 文件目录操作命令 tail")]),t._v(" "),a("p",[t._v("作用：查看文件末尾的内容")]),t._v(" "),a("p",[t._v("语法： tail [-f] fileName")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-f：动态读取文件末尾内容并显示，通常用于日志文件的内容输出")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("tail /etc/profile\t\t\t  显示/etc目录下的profile文件末尾10行的内容")]),t._v(" "),a("li",[t._v("tail -20 /etc/profile\t\t显示/etc目录下的profile文件末尾20行的内容")]),t._v(" "),a("li",[t._v("tail -f /itcast/my.log\t\t动态读取/itcast目录下的my.log文件末尾内容并显示")])]),t._v(" "),a("h5",{attrs:{id:"_2-6-文件目录操作命令-mkdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-文件目录操作命令-mkdir"}},[t._v("#")]),t._v(" 2.6 文件目录操作命令 mkdir")]),t._v(" "),a("p",[t._v("作用：创建目录")]),t._v(" "),a("p",[t._v("语法：mkdir [-p] dirName")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-p：确保目录名称存在，不存在的就创建一个。通过此选项，可以实现多层目录同时创建")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("mkdir itcast  在当前目录下，建立一个名为itcast的子目录")])]),t._v(" "),a("li",[a("p",[t._v("mkdir -p itcast/test  在工作目录下的itcast目录中建立一个名为test的子目录，若itcast目录不存在，则建立一个")])])]),t._v(" "),a("h5",{attrs:{id:"_2-7-文件目录操作命令-rmdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-文件目录操作命令-rmdir"}},[t._v("#")]),t._v(" 2.7 文件目录操作命令 rmdir")]),t._v(" "),a("p",[t._v("作用：删除空目录")]),t._v(" "),a("p",[t._v("语法：rmdir [-p] dirName")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-p：当子目录被删除后使父目录为空目录的话，则一并删除")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("rmdir itcast  删除名为itcast的空目录")]),t._v(" "),a("li",[t._v("rmdir -p itcast/test  删除itcast目录中名为test的子目录，若test目录删除后itcast目录变为空目录，则也被删除")]),t._v(" "),a("li",[t._v("rmdir itcast*  删除名称以itcast开始的空目录")])]),t._v(" "),a("h5",{attrs:{id:"_2-8-文件目录操作命令-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-文件目录操作命令-rm"}},[t._v("#")]),t._v(" 2.8 文件目录操作命令 rm")]),t._v(" "),a("p",[t._v("作用：删除文件或者目录")]),t._v(" "),a("p",[t._v("语法：rm [-rf] name")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-r：将目录及目录中所有文件（目录）逐一删除，即递归删除")]),t._v(" "),a("li",[t._v("-f：无需确认，直接删除")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("rm -r itcast/  删除名为itcast的目录和目录中所有文件，删除前需确认")]),t._v(" "),a("li",[t._v("rm -rf itcast/  无需确认，直接删除名为itcast的目录和目录中所有文件")]),t._v(" "),a("li",[t._v("rm -f hello.txt  无需确认，直接删除hello.txt文件")])]),t._v(" "),a("h4",{attrs:{id:"_3、拷贝移动命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、拷贝移动命令"}},[t._v("#")]),t._v(" 3、拷贝移动命令")]),t._v(" "),a("h5",{attrs:{id:"_3-1-拷贝移动命令-cp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-拷贝移动命令-cp"}},[t._v("#")]),t._v(" 3.1 拷贝移动命令 cp")]),t._v(" "),a("p",[t._v("作用：用于复制文件或目录")]),t._v(" "),a("p",[t._v("语法：cp [-r] source dest")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-r：如果复制的是目录需要使用此选项，此时将复制该目录下所有的子目录和文件")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("cp hello.txt itcast/\t\t\t\t将hello.txt复制到itcast目录中")])]),t._v(" "),a("li",[a("p",[t._v("cp hello.txt ./hi.txt\t\t\t    将hello.txt复制到当前目录，并改名为hi.txt")])]),t._v(" "),a("li",[a("p",[t._v("cp -r itcast/ ./itheima/\t\t  将itcast目录和目录下所有文件复制到itheima目录下")])]),t._v(" "),a("li",[a("p",[t._v("cp -r itcast/* ./itheima/\t\t将itcast目录下所有文件复制到itheima目录下")])])]),t._v(" "),a("h5",{attrs:{id:"_3-2-拷贝移动命令-mv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-拷贝移动命令-mv"}},[t._v("#")]),t._v(" 3.2 拷贝移动命令 mv")]),t._v(" "),a("p",[t._v("作用：为文件或目录改名、或将文件或目录移动到其它位置")]),t._v(" "),a("p",[t._v("语法：mv source dest")]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("mv hello.txt hi.txt\t\t\t\t\t\t将hello.txt改名为hi.txt")]),t._v(" "),a("li",[t._v("mv hi.txt itheima/\t\t\t            将文件hi.txt移动到itheima目录中")]),t._v(" "),a("li",[t._v("mv hi.txt itheima/hello.txt\t\t 将hi.txt移动到itheima目录中，并改名为hello.txt")]),t._v(" "),a("li",[t._v("mv itcast/ itheima/\t\t              如果itheima目录不存在，将itcast目录改名为itheima")]),t._v(" "),a("li",[t._v("mv itcast/ itheima/\t\t              如果itheima目录存在，将itcast目录移动到itheima目录中")])]),t._v(" "),a("h4",{attrs:{id:"_4、打包压缩命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、打包压缩命令"}},[t._v("#")]),t._v(" 4、打包压缩命令")]),t._v(" "),a("h5",{attrs:{id:"_4-1-打包压缩命令-tar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-打包压缩命令-tar"}},[t._v("#")]),t._v(" 4.1 打包压缩命令 tar")]),t._v(" "),a("p",[t._v("作用：对文件进行打包、解包、压缩、解压")]),t._v(" "),a("p",[t._v("语法： tar [-zcxvf] fileName [files]")]),t._v(" "),a("p",[t._v("包文件后缀为.tar表示只是完成了打包，并没有压缩")]),t._v(" "),a("p",[t._v("包文件后缀为.tar.gz表示打包的同时还进行了压缩")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("-z：z代表的是gzip，通过gzip命令处理文件，gzip可以对文件压缩或者解压")]),t._v(" "),a("li",[t._v("-c：c代表的是create，即创建新的包文件")]),t._v(" "),a("li",[t._v("-x：x代表的是extract，实现从包文件中还原文件")]),t._v(" "),a("li",[t._v("-v：v代表的是verbose，显示命令的执行过程")]),t._v(" "),a("li",[t._v("-f： f代表的是file，用于指定包文件的名称")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("p",[t._v("打包")]),t._v(" "),a("ul",[a("li",[t._v("tar -cvf hello.tar ./*\t\t\t\t将当前目录下所有文件打包，打包后的文件名为hello.tar")]),t._v(" "),a("li",[t._v("tar -zcvf hello.tar.gz ./*\t\t 将当前目录下所有文件打包并压缩，打包后的文件名为hello.tar.gz")])]),t._v(" "),a("p",[t._v("解包")]),t._v(" "),a("ul",[a("li",[t._v("tar -xvf hello.tar\t\t\t\t\t\t\t\t\t\t将hello.tar文件进行解包，并将解包后的文件放在当前目录")]),t._v(" "),a("li",[t._v("tar -zxvf hello.tar.gz\t\t\t\t\t\t\t\t  将hello.tar.gz文件进行解压，并将解压后的文件放在当前目录")]),t._v(" "),a("li",[t._v("tar -zxvf hello.tar.gz -C /usr/local \t\t   将hello.tar.gz文件进行解压，并将解压后的文件放在/usr/local目录")])]),t._v(" "),a("h4",{attrs:{id:"_5、文本编辑命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、文本编辑命令"}},[t._v("#")]),t._v(" 5、文本编辑命令")]),t._v(" "),a("h5",{attrs:{id:"_5-1-文本编辑命令-vi-vim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-文本编辑命令-vi-vim"}},[t._v("#")]),t._v(" 5.1 文本编辑命令 vi/vim")]),t._v(" "),a("p",[t._v("作用：vi命令是Linux系统提供的一个文本编辑工具，可以对文件内容进行编辑，类似于Windows中的记事本")]),t._v(" "),a("p",[t._v("语法：vi fileName")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("vim是从vi发展来的一个功能更加强大的文本编辑工具，在编辑文件时可以对文本内容进行着色，方便我们对文件进行编辑处理，所以实际工作中vim更加常用。")])]),t._v(" "),a("li",[a("p",[t._v("要使用vim命令，需要我们自己完成安装。可以使用下面的命令来完成安装：yum install vim")])])]),t._v(" "),a("h5",{attrs:{id:"_5-2-文本编辑命令-vim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-文本编辑命令-vim"}},[t._v("#")]),t._v(" 5.2 文本编辑命令 vim")]),t._v(" "),a("p",[t._v("作用：对文件内容进行编辑，vim其实就是一个文本编辑器")]),t._v(" "),a("p",[t._v("语法：vim fileName")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ol",[a("li",[t._v("在使用vim命令编辑文件时，如果指定的文件存在则直接打开此文件。如果指定的文件不存在则新建文件。")]),t._v(" "),a("li",[t._v("vim在进行文本编辑时共分为三种模式，分别是命令模式(Command mode)，插入模式(Insert mode)和底行模式(Last line mode)。这三种模式之间可以相互切换。我们在使用vim时一定要注意我们当前所处的是哪种模式。")])]),t._v(" "),a("p",[t._v("针对vim中的三种模式说明如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("命令模式")]),t._v(" "),a("ul",[a("li",[t._v("命令模式下可以查看文件内容、移动光标(上下左右箭头、gg、G)")]),t._v(" "),a("li",[t._v("通过vim命令打开文件后，默认进入命令模式")]),t._v(" "),a("li",[t._v("另外两种模式需要首先进入命令模式，才能进入彼此")])])]),t._v(" "),a("li",[a("p",[t._v("插入模式")]),t._v(" "),a("ul",[a("li",[t._v("插入模式下可以对文件内容进行编辑")]),t._v(" "),a("li",[t._v("在命令模式 下按下[i,a,o]任意-一个，可以进入插入模式。进入插入模式后，下方会出现[insert] 字样")]),t._v(" "),a("li",[t._v("在插入模式下按下ESC键,回到命令模式")])])]),t._v(" "),a("li",[a("p",[t._v("底行模式")]),t._v(" "),a("ul",[a("li",[t._v("底行模式下可以通过命令对文件内容进行查找、显示行号、退出等操作")]),t._v(" "),a("li",[t._v("在命令模式下按下[:,/]任意一个，可以进入底行模式")]),t._v(" "),a("li",[t._v("通过/方式进入底行模式后，可以对文件内容进行查找")]),t._v(" "),a("li",[t._v("通过:方式进入底行模式后，可以输入wq(保存并退出）、q!(不保存退出)、set nu(显示行号)")])])])]),t._v(" "),a("h4",{attrs:{id:"_6、查找命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、查找命令"}},[t._v("#")]),t._v(" 6、查找命令")]),t._v(" "),a("h5",{attrs:{id:"_6-1-查找命令-find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-查找命令-find"}},[t._v("#")]),t._v(" 6.1 查找命令 find")]),t._v(" "),a("p",[t._v("作用：在指定目录下查找文件")]),t._v(" "),a("p",[t._v("语法： find dirName -option fileName")]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v('find . -name "*.java"\t\t\t\t\t在当前目录及其子目录下查找.java结尾文件')]),t._v(" "),a("li",[t._v('find /itcast -name "*.java"\t\t\t在/itcast目录及其子目录下查找.java结尾的文件')])]),t._v(" "),a("h5",{attrs:{id:"_6-2-查找命令-grep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-查找命令-grep"}},[t._v("#")]),t._v(" 6.2 查找命令 grep")]),t._v(" "),a("p",[t._v("作用：从指定文件中查找指定的文本内容")]),t._v(" "),a("p",[t._v("语法： grep word fileName")]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("ul",[a("li",[t._v("grep Hello Helloworld.java\t\t\t查找HelloWorld.java文件中出现的Hello字符串的位置")]),t._v(" "),a("li",[t._v("grep hello *.java\t\t\t\t\t\t\t  查找当前目录中所有.java结尾的文件中包含hello字符串的位置")])]),t._v(" "),a("h3",{attrs:{id:"五、linux软件安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、linux软件安装"}},[t._v("#")]),t._v(" 五、Linux软件安装")]),t._v(" "),a("h4",{attrs:{id:"_1、-软件安装方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、-软件安装方式"}},[t._v("#")]),t._v(" 1、 软件安装方式")]),t._v(" "),a("ul",[a("li",[t._v("二进制发布包安装\n软件已经针对具体平台编译打包发布，只要解压，修改配置即可")]),t._v(" "),a("li",[t._v("rpm安装\n软件已经按照redhat的包管理规范进行打包，使用rpm命令进行安装，不能自行解决库依赖问题")]),t._v(" "),a("li",[t._v("yum安装\n一种在线软件安装方式，本质上还是rpm安装，自动下载安装包并安装，安装过程中自动解决库依赖问题")]),t._v(" "),a("li",[t._v("源码编译安装\n软件以源码工程的形式发布，需要自己编译打包")])]),t._v(" "),a("h4",{attrs:{id:"_2、-安装-jdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、-安装-jdk"}},[t._v("#")]),t._v(" 2、 安装 jdk")]),t._v(" "),a("p",[t._v("操作步骤：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用FinalShell自带的上传工具将jdk的二进制发布包上传到Linux  jdk-8u171-linux-x64.tar.gz")])]),t._v(" "),a("li",[a("p",[t._v("解压安装包，命令为tar -zxvf jdk-8u171-linux-x64.tar.gz -C /usr/local")])]),t._v(" "),a("li",[a("p",[t._v("配置环境变量，使用vim命令修改/etc/profile文件，在文件末尾加入如下配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("JAVA_HOME=/usr/local/jdk1.8.0_171\nPATH=$JAVA_HOME/bin:$PATH\n")])])])]),t._v(" "),a("li",[a("p",[t._v("重新加载profile文件，使更改的配置立即生效，命令为source /etc/profile")])]),t._v(" "),a("li",[a("p",[t._v("检查安装是否成功，命令为java -version")])])]),t._v(" "),a("h4",{attrs:{id:"_3、-安装-tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、-安装-tomcat"}},[t._v("#")]),t._v(" 3、 安装 Tomcat")]),t._v(" "),a("p",[t._v("操作步骤：")]),t._v(" "),a("ol",[a("li",[t._v("使用FinalShell自带的上传工具将Tomcat的二进制发布包上传到Linux  apache-tomcat-7.0.57.tar.gz")]),t._v(" "),a("li",[t._v("解压安装包，命令为tar -zxvf apache-tomcat-7.0.57.tar.gz -C /usr/local")]),t._v(" "),a("li",[t._v("进入Tomcat的bin目录启动服务，命令为sh startup.sh或者./ startup.sh")])]),t._v(" "),a("p",[t._v("验证Tomcat启动是否成功，有多种方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查看启动日志")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("more  /usr/local/apache-tomcat-8.5.85/logs/catalina.out\ntail -50 /usr/local/apache-tomcat-8.5.85/logs/catalina.out\n")])])])]),t._v(" "),a("li",[a("p",[t._v("查看进程    ps -ef | grep tomcat")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Linux/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%85Tomcat%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("ps命令是linux下非常强大的进程查看命令，通过ps -ef可以查看当前运行的所有进程的详细信息")]),t._v(" "),a("li",[t._v('"|" 在Linux中称为管道符，可以将前一个命令的结果输出给后一个命令作为输入')]),t._v(" "),a("li",[t._v("使用ps命令查看进程时，经常配合管道符和查找命令 grep一起使用，来查看特定进程")])])]),t._v(" "),a("p",[t._v("防火墙操作：")]),t._v(" "),a("ul",[a("li",[t._v("查看防火墙状态(systemctl status firewalld、firewall-cmd --state)")]),t._v(" "),a("li",[t._v("暂时关闭防火墙(systemctl stop firewalld)")]),t._v(" "),a("li",[t._v("永久关闭防火墙(systemctl disable firewalld)")]),t._v(" "),a("li",[t._v("开启防火墙(systemctl start firewalld)")]),t._v(" "),a("li",[t._v("开放指定端口(firewall-cmd --zone=public --add-port=8080/tcp --permanent)")]),t._v(" "),a("li",[t._v("关闭指定端口(firewall-cmd --zone=public --remove-port=8080/tcp --permanent)")]),t._v(" "),a("li",[t._v("立即生效(firewall-cmd --reload)")]),t._v(" "),a("li",[t._v("查看开放的端口(firewall-cmd --zone=public --list-ports)")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("ol",[a("li",[t._v("systemctl是管理Linux中服务的命令，可以对服务进行启动、停止、重启、查看状态等操作")]),t._v(" "),a("li",[t._v("firewall-cmd是Linux中专门用于控制防火墙的命令")]),t._v(" "),a("li",[t._v("为了保证系统安全，服务器的防火墙不建议关闭")])])]),t._v(" "),a("p",[t._v("停止Tomcat服务的方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("运行Tomcat的bin目录中提供的停止服务的脚本文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sh shutdown.sh\n./shutdown.sh\n")])])])]),t._v(" "),a("li",[a("p",[t._v("结束Tomcat进程\n查看Tomcat进程，获得进程id\n"),a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Linux/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%85Tomcat%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B.png",alt:""}}),t._v("\n执行命令结束进程 kill -9 7742")])])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("p",[t._v("kill命令是Linux提供的用于结束进程的命令，-9表示强制结束")])]),t._v(" "),a("h4",{attrs:{id:"_4、-安装-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、-安装-mysql"}},[t._v("#")]),t._v(" 4、 安装 MySQL")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("检测当前系统中是否安装MySQL数据库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("rpm -qa\t\t\t\t\t\t查询当前系统中安装的所有软件\nrpm -qa | grep mysql\t\t查询当前系统中安装的名称带mysql的软件\nrpm -qa | grep mariadb\t\t查询当前系统中安装的名称带mariadb的软件\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")])])])]),t._v(" "),a("p",[t._v("[root@localhost ~]#rpm -qa | grep mariadb\nmariadb-libs-5.5.60-1.e17 5.x86_64")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n\nRPM(Red-Hat Package Manager) RPM软件包管理器，是红帽Linux用于管理和安装软件的工具\n\n> 注意事项\n>\n> 如果当前系统中已经安装有MySQL数据库，安装将失败。CentOS7自带mariadb，与MySQL数据库冲突。\n\n2. 卸载已经安装的冲突软件\n\n")])])]),a("p",[t._v("rpm -e --nodeps 软件名称\t\t\t\t卸载软件\nrpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n3. 将资料中提供的MySQL安装包上传到Linux并解压\n\n")])])]),a("p",[t._v("mkdir /usr/local/mysql\ntar -zxvf mysql-5.7.25-1.el7.x86_64.rpm-bundle.tar.gz -C/usr/local/mysql")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("p",[t._v("mysq1-5.7.25-1.e17.x86_64.rpm-bund1e.tar.gz\nmysq1-community-client-5.7.25-1.e17.x86_64.rpm\nmysq1-cammunity-common-5.7.25-1.e17.x86_64.rpm\nmysq1-cammunity-deve1-5.7.25-1.e17.x86_64.rpm\nmysq1-cammunity-1ibs-5.7.25-1.e17.x86_64.rpm\nmysq1-cammunity-1ibs-compat-5.7.25-1.e17.x86_64.rpm\nmysq1-cammunity-server-5.7.25-1.e17.x86_64.rpm")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n说明：解压后得到6个rpm的安装包文件\n\n4. 按照顺序安装rpm软件包\n\n")])])]),a("p",[t._v("rpm -ivh mysql-community-common-5.7.25-1.el7.x86_64.rpm\nrpm -ivh mysql-community-libs-5.7.25-1.el7.x86_64.rpm\nrpm -ivh mysql-community-devel-5.7.25-1.el7.x86_64.rpm\nrpm -ivh mysql-community-libs-compat-5.7.25-1.el7.x86_64.rpm\nrpm -ivh mysql-community-client-5.7.25-1.el7.x86_64.rpm\nyum install net-tools\nrpm -ivh mysql-community-server-5.7.25-1.el7.x86_64.rpm")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n说明1：安装过程中提示缺少net-tools依赖，使用yum安装说明2：可以通过指令升级现有软件及系统内核\n\n")])])]),a("p",[t._v("yum update")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n5. 启动mysql\n\n")])])]),a("p",[t._v("systemctl status mysqld     查看mysql服务状态\nsystemctl start mysqld      启动mysql服务")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("p",[t._v("mysq1d. service -MySQL Server\nLoaded: 1oaded (/usr/1ib/systemd/system/mysq1d.service;\nActive: inactive (dead)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n\n说明：可以设置开机时启动mysql服务，避免每次开机启动mysql\n\n")])])]),a("p",[t._v("systemctl enable mysqld   开机启动mysql服务\nnetstat -tunlp            查看已经启动的服务\nnetstat -tunlp | grep mysql")]),t._v(" "),a("p",[t._v("ps -ef | grep mysql       查看mysql进程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n6. 登录MySQL数据库，查阅临时密码\n\n")])])]),a("p",[t._v("cat /var/log/mysqld.log           查看文件内容\ncat /var/log/mysqld.log | grep password   查看文件内容中包含password的行信息")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("p",[t._v("[Note] A temporary password is generated for root@1oca7host:F511ay,-1aG6")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n> 注意事项\n>\n> 冒号后面的是密码，注意空格\n\n7. 登录MySQL，修改密码，开放访问权限\n\n")])])]),a("p",[t._v("mysql -uroot -p     登录mysql（使用临时密码登录)\n#修改密码\nset global validate_password_length=4;    设置密码长度最低位数\nset global validate_password_policy=LOW;  设置密码安全等级低，便于密码可以修改成root\nset password = password('root');          设置密码为root\n#开启访问权限\ngrant all on "),a("em",[t._v(".")]),t._v(" to 'root'@'%' identified by 'root';\nflush privileges;")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n8. 测试MySQL数据库是否正常工作\n\n")])])]),a("p",[t._v("show databases;")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n#### 5、 安装 lrzsz\n\n操作步骤：\n\n1. 搜索lrzsz安装包，命令为 yum list lrzsz\n\n")])])]),a("p",[t._v("[root@localhost /]## yum list 1rzsz\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile")]),t._v(" "),a("ul",[a("li",[t._v("base: mirrors.tuna.tsinghua.edu.cn")]),t._v(" "),a("li",[t._v("extras: mirrors.bfsu.edu.cn")]),t._v(" "),a("li",[t._v("updates: mirrors . bfsu.edu. cn\nAvailable Packages\n1rzsz.x86_64                      0.12.20-36.e17")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n2. 使用yum命令在线安装，命令为yum install lrzsz.x86_64\n\n> 注意事项\n>\n> Yum(全称为Yellow dog Updater, Modified )是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。\n\n### 六、项目部署\n\n#### 1、手工部署项目\n\n1. 在IDEA中开发SpringBoot项目并打成jar包\n\n2. 将jar包上传到Linux服务器\n\n")])])]),a("p",[t._v("mkdir /usr/local/app          创建目录，将项目jar包放到此目录")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n3. 启动SpringBoot程序\n\n")])])]),a("p",[t._v("[root@localhost app]## java -jar helloworid-1.0-SNAPSHOT.jar")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n4. 检查防火墙，确保8080端口对外开放，访问SpringBoot项目\n\n")])])]),a("p",[t._v("[root@localhost~]## firewall-cmd --zone-public --list-ports\n80880/tcp 3306/tcp")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n5. 改为后台运行SpringBoot程序，并将日志输出到日志文件\n\n目前程序运行的问题\n\n- 线上程序不会采用控制台霸屏的形式运行程序，而是将程序在后台运行\n- 线上程序不会将日志输出到控制台，而是输出到日志文件，方便运维查阅信息\n\n")])])]),a("p",[t._v("nohup命令：英文全称 no hang up(不挂起)，用于不挂断地运行指定命令，退出终端不会影响程序的运行\n语法格式：nohup Command [Arg ...][&]\n参数说明：\nCommand：要执行的命令\nArg：一些参数,可以指定输出文件\n&：让命令在后台运行\n举例：\nnohup java -jar boot工程.jar &> hello.log &    后台运行java -jar命令，并将日志输出到hello.log文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n6. 停止SpringBoot程序\n\n")])])]),a("p",[t._v("[root@localhost app]## ps -ef | grep \"java -jar'\nroot 3568532329 0 16:34 pts/2 00:0 d09 java -jar helloworld-1.0-SNAPSHOT.jat\nroot 59839 32329 0 16:55 pts/2 00:00:00 grep --color=auto java -jar\n[root@localhost app]## kill -9 35685")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n#### 2、通过Shell脚本自动部署项目\n\n操作步骤：\n\n1. 在Linux中安装Git\n2. 在Linux中安装maven\n3. 编写Shell脚本（拉取代码、编译、打包、启动）\n4. 为用户授予执行Shell脚本的权限\n5. 执行Shell脚本\n\n![](瑞吉外卖项目学习笔记黑马程序员/Linux/项目部署/Shell脚本自动部署项目.png)\n\n##### 2.1 在Linux中安装Git\n\n")])])]),a("p",[t._v("yum list git                  列出git安装包\nyum install git               在线安装git")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n##### 2.2 使用Git克隆代码\n\n")])])]),a("p",[t._v("cd /usr/local/\ngit clone https://gitee.com/wachongyang/helloworld.git")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n##### 2.3 将资料中提供的maven安装包上传到Linux，在Linux中安装maven\n\n")])])]),a("p",[t._v("tar -zxvf apache-maven-3.5.4-bin.tar.gz -C /usr/local\nvim /etc/profile               修改配置文件，加入如下内容\nexport MAVEN_HOME=/usr/local/apache-maven-3.5.4\nexport PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATH\nsource /etc/profile\nmvn -version\nvim /usr/local/apache-maven-3.5.4/conf/settings.xml  修改配置文件内容如下\n"),a("localRepository",[t._v("/usr/local/repo")])],1),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n##### 2.4 将资料中提供的Shell脚本文件复制到Linux  bootStart.sh\n\n")])])]),a("p",[t._v("Shell脚本（(shell script)，是一种Linux系统中的脚本程序。\n使用Shell脚本编程跟JavaScript、Java编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了。\n对于Shell脚本编写不作为本课程重点内容，直接使用课程资料中提供的脚本文件bootStart.sh即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n##### 2.5 为用户授权\n\n")])])]),a("p",[t._v("chmod（英文全拼: change mode）命令是控制用户对文件的权限的命令\nLinux中的权限分为:读(r)、写(w)、执行(x)三种权限\nLinux的文件调用权限分为三级∶文件所有者(Owner)、用户组(Group)、其它用户(Other Users)\n只有文件的所有者和超级用户可以修改文件或目录的权限\n要执行Shell脚本需要有对此脚本文件的执行权限，如果没有则不能执行")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("p",[t._v("-r--r--. 1 root root 785 May 17 20:43 bootStart.sh")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n![](瑞吉外卖项目学习笔记黑马程序员/Linux/项目部署/Shell脚本自动部署项目为用户授权.png)\n\nchmod命令可以使用八进制数来指定权限\n\n| ##    | 权限           | rwx  |\n| ---- | -------------- | ---- |\n| 7    | 读 + 写 + 执行 | rwx  |\n| 6    | 读 + 写        | rw-  |\n| 5    | 读 + 执行      | r-x  |\n| 4    | 只读           | r--  |\n| 3    | 写 + 执行      | --wx |\n| 2    | 只写           | -w-  |\n| 1    | 只执行         | --x  |\n| 0    | 无             | ---  |\n\n举例：\n\n- chmod 777 bootStart.sh  为所有用户授予读、写、执行权限\n- chmod 755 bootStart.sh  为文件拥有者授予读、写、执行权限，同组用户和其他用户授予读、执行权限\n- chmod 210 bootStart.sh  文件拥有者授予写权限，同组用户授予执行权限，其他用户没有任何权限\n\n> 注意：三位数字分别代表不同用户的权限\n>\n> - 第1位表示文件拥有者的权限\n> - 第2位表示同组用户的权限\n> - 第3位表示其他用户的权限\n\n##### 2.7 设置静态ip\n\n修改文件/etc/sysconfig/network-scripts/ifcfg-ens33，内容如下：\n\n")])])]),a("p",[t._v('TYPE="Ethernet"\nPROXY_METHOD="none"\nBROWSER_ONLY="no"\nBOOTPROTO="static"                  #使用静态P地址，默认为dhcp\nIPADDR="192.168.138.100"            #设置的静态I地址\nNETMASK="255.255.255.e"             #子网掩码\nGATEWAY="192.168.138.2"             #网关地址\nDNS1="192.168.138.2"                #DNS服务器\nDEFROUTE="yes"\nIPV4_FAILURE_FATAL= "no"\nIPV6INIT="yes"\nIPV6_AUTOCONF="yes"\nIPV6_DEFROUTE="yes"\nIPV6_FAILURE_FATAL="no"\nIPV6_ADDR_GEN_MODE="stable.-privacy"\nNAME=""ens33"\nUUID="95b614cd-79b0-4755-b08d-99f1cca7271b"\nDEVICE="ens33"\nONBOOT="yes "                        #是否开机启用')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n![](瑞吉外卖项目学习笔记黑马程序员/Linux/项目部署/Shell脚本自动部署项目设置静态ip.png)\n\n##### 2.8 重启网络服务\n\n")])])]),a("p",[t._v("[root@localhost ~]## systemctl restart network\n[root@localhost ~]#")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n> 注意：重启完网络服务后ip地址已经发生了改变，此时FinalShell已经连接不上Linux系统,需要创建一个新连接才能连接到Linux。\n\n## Redis 基础\n\nRedis是一个基于内存的key-value结构数据库。\n\n- 基于内存存储，读写性能高\n- 适合存储热点数据（热点商品、资讯、新闻)\n- 企业应用广泛\n\n### 一、Redis 入门\n\n#### 1、Redis 简介\n\nRedis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and\nmessage broker，翻译为：Redis是一个开源的内存中的数据结构存储系统，它可以用作：数据库、缓存和消息中间件。\n\n官网： https://redis.io\n\nRedis是用C语富开发的一个开源的高性能键值对(key-value)数据库，官方提供的数据是可以达到100000+的QPS(每秒内查询次数）。它存储的value类型比较丰富，也被称为结构化的NoSql数据库。\n\nNoSql (Not Only sQL)，不仅仅是SQL，泛指非关系型数据库。NoSql数据库并不是要取代关系型数据库，而是关系型数据库的补充。\n\n- 关系型数据库(RDBMS)\n  - Mysql\n  - Oracle\n  - DB2\n  - SQLServer\n\n- 非关系型数据库(NoSql)\n  - Redis\n  - Mongo db\n  - MemCached\n\n- Redis应用场景\n  - 缓存\n  - 任务队列\n  - 消息队列\n  - 分布式锁\n\n#### 2、Redis 下载与安装\n\nRedis安装包分为windows版和Linux版：\n\n- Windows版下载地址： https://github.com/microsoftarchive/redis/releases\n- Linux版下载地址： https://download.redis.io/releases/\n\n在Linux系统安装Redis步骤：\n\n1. 将Redis安装包上传到Linux\n2. 解压安装包，命令： tar -zxvf redis-4.0.0.tar.gz-C /usr/local\n3. 安装Redis的依赖环境gcc，命令： yum install gcc-C++\n4. 进入/usr/local/redis-4.0.0，进行编译，命令： make\n5. 进入redis的src目录，进行安装，命令：make install\n\nRedis的Windows版属于绿色软件，直接解压即可使用，解压后目录结构如下：\n\n#### 3、Redis 服务启动与停止\n\nLinux中redis服务启动，可以使用redis-server，默认端口号为6379\n\nCtrl+C停止Redis服务\n\n")])])]),a("p",[t._v("../bin/redis-server ./redis.conf\n../bin/redis-cli -a 123456")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nWindows系统中启动Redis，直接双击redis-server.exe即可启动Redis服务，redis服务默认端口号为6379\n\nCtrl+C停止Redis服务\n\n### 二、数据类型\n\n#### 1、介绍\n\nRedis存储的是key-value结构的数据，其中key是字符串类型，value有5种常用的数据类型：\n\n- 字符串 string\n- 哈希 hash\n- 列表 list\n- 集合 set\n- 有序集合 sorted set\n\n#### 2、Redis 5种常用数据类型\n\n![](瑞吉外卖项目学习笔记黑马程序员/Redis/Redis5种常见数据类型.png)\n\n### 三、常用命令\n\n#### 1、字符串string操作命令\n\nRedil 中字符串类型常用命令：\n\n- SET key value                             设置指定key的值\n- GET key                                       获取指定key的值\n- SETEX key seconds value         设置指定key的值，并将key 的过期时间设为seconds秒\n- SETNX key value                         只有在key不存在时设置key的值\n\n更多命令可以参考Redis中文网：https://www.redis.net.cn\n\n#### 2、哈希hash操作命令\n\nRedis hash是一个string类型的field和value 的映射表，hash特别适合用于存储对象，常用命令：\n\n- HSET key field value                    将哈希表key中的字段field 的值设为value\n- HGET key field                              获取存储在哈希表中指定字段的值\n- HDEL key field                              删除存储在哈希表中的指定字段\n- HKEYS key                                     获取哈希表中所有字段\n- HVALS key                                     获取哈希表中所有值\n- HGETALL key                                获取在哈希表中指定key的所有字段和值\n\n#### 3、列表list操作命令\n\nRedis列表是简单的字符串列表，按照插入顺序排序，常用命令：\n\n- LPUSH key value1 [value2]                             将一个或多个值插入到列表头部\n- LRANGE key start stop                                    获取列表指定范围内的元素\n- RPOP key                                                           移除并获取列表最后一个元素\n- LLEN key                                                            获取列表长度\n- BRPOP key1 [key2 ] timeout                          移出并获取列表的最后一个元素，如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止\n\n#### 4、集合set操作命令\n\nRedis set 是string类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据，常用命令：\n\n- SADD key member1 [member2]                   向集合添加一个或多个成员\n- SMEMBERS key                                                 返回集合中的所有成员\n- SCARD key                                                         获取集合的成员数\n- SINTER key1 [key2]                                           返回给定所有集合的交集\n- SUNION key1 [key2]                                         返回所有给定集合的并集\n- SDIFF key1 [key2]                                              返回给定所有集合的差集\n- SREM key member1 [member2]                    移除集合中一个或多个成员\n\n#### 5、有序集合sorted set操作命令\n\nRedis sorted set有序集合是string类型元素的集合，且不允许重复的成员。每个元素都会关联一个double类型的分数(score)。redis正是通过分数来为集合中的成员进行从小到大排序。有序集合的成员是唯一的，但分数却可以重复。\n\n常用命令：\n\n- ZADD key score1 member1 [score2 member2]            向有序集合添加一个或多个成员，或者更新已存在成员的分数\n- ZRANGE key start stop [WITHSCORES]                            通过索引区间返回有序集合中指定区间内的成员\n- ZINCRBY key increment member                                      有序集合中对指定成员的分数加上增量increment\n- ZREM key member [member ...]                                        移除有序集合中的一个或多个成员\n\n#### 6、通用命令\n\n- KEYS pattern                               查找所有符合给定模式(pattern)的 key\n- EXISTS key                                   检查给定key是否存在\n- TYPE key                                      返回key所储存的值的类型\n- TTL key                                        返回给定key的剩余生存时间(TTL, time to live)，以秒为单位\n- DEL key                                       该命令用于在key存在是删除key\n\n### 四、在 Java 中操作 Redis\n\n#### 1、介绍\n\nRedis 的Java客户端很多，官方推荐的有三种：\n\n- Jedis\n- Lettuce\n- Redisson\n\nSpring对Redis客户端进行了整合，提供了Spring Data Redis，在Spring Boot项目中还提供了对应的Starter，即spring-boot-starter-data-redis\n\n#### 2、Jedis\n\nJedis的maven坐标：\n\n```xml\n<dependency>\n\t<groupld>redis.clients</groupld>\n    <artifactld>jedis</artifactld>\n    <version>2.8.0</version>\n</dependency>\n")])])]),a("p",[t._v("使用Jedis操作Redis的步骤：")]),t._v(" "),a("ul",[a("li",[t._v("获取连接")]),t._v(" "),a("li",[t._v("执行操作")]),t._v(" "),a("li",[t._v("关闭连接")])]),t._v(" "),a("h4",{attrs:{id:"_3、spring-data-redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、spring-data-redis"}},[t._v("#")]),t._v(" 3、Spring Data Redis")]),t._v(" "),a("p",[t._v("在Spring Boot项目中，可以使用Spring Data Redis来简化Redis操作，maven坐标：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-redis"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("Spring Data Redis中提供了一个高度封装的类：RedisTemplate，针对jedis客户端中大量api进行了归类封装,将同一类型操作封装为operation接口，具体分类如下：")]),t._v(" "),a("ul",[a("li",[t._v("ValueOperations：简单K-V操作")]),t._v(" "),a("li",[t._v("SetOperations： set类型数据操作")]),t._v(" "),a("li",[t._v("ZSetOperations： zset类型数据操作")]),t._v(" "),a("li",[t._v("HashOperations：针对map类型的数据操作")]),t._v(" "),a("li",[t._v("ListOperations：针对list类型的数据操作")])]),t._v(" "),a("h2",{attrs:{id:"spring-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-cache"}},[t._v("#")]),t._v(" Spring Cache")]),t._v(" "),a("h3",{attrs:{id:"_1、spring-cache介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、spring-cache介绍"}},[t._v("#")]),t._v(" 1、Spring Cache介绍")]),t._v(" "),a("p",[t._v("Spring Cache是一个框架，实现了基于注解的缓存功能，只需要简单地加一个注解，就能实现缓存功能。")]),t._v(" "),a("p",[t._v("Spring Cache提供了一层抽象，底层可以切换不同的cache实现。具体就是通过cacheManager接口来统一不同的缓存技术。")]),t._v(" "),a("p",[t._v("CacheManager是Spring提供的各种缓存技术抽象接口。")]),t._v(" "),a("p",[t._v("针对不同的缓存技术需要实现不同的CacheManager：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("CacheManager")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("EhCacheCacheManager")]),t._v(" "),a("td",[t._v("使用EhCache作为缓存技术")])]),t._v(" "),a("tr",[a("td",[t._v("GuavaCacheManager")]),t._v(" "),a("td",[t._v("使用Google的GuavaCache作为缓存技术")])]),t._v(" "),a("tr",[a("td",[t._v("RedisCacheManager")]),t._v(" "),a("td",[t._v("使用Redis作为缓存技术")])])])]),t._v(" "),a("h3",{attrs:{id:"_2、spring-cache常用注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、spring-cache常用注解"}},[t._v("#")]),t._v(" 2、Spring Cache常用注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("注解")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("@EnableCaching")]),t._v(" "),a("td",[t._v("开启缓存注解功能")])]),t._v(" "),a("tr",[a("td",[t._v("@Cacheable")]),t._v(" "),a("td",[t._v("在方法执行前spring先查看缓存中是否有数据，如果有数据，则直接返回缓存数据；若没有数据，调用方法并将方法返回值放到缓存中")])]),t._v(" "),a("tr",[a("td",[t._v("@CachePut")]),t._v(" "),a("td",[t._v("将方法的返回值放到缓存中")])]),t._v(" "),a("tr",[a("td",[t._v("@CacheEvict")]),t._v(" "),a("td",[t._v("将一条或多条数据从缓存中删除")])])])]),t._v(" "),a("p",[t._v("在spring boot项目中，使用缓存技术只需在项目中导入相关缓存技术的依赖包，并在启动类上使用@EnableCaching开启缓存支持即可。")]),t._v(" "),a("p",[t._v("例如，使用Redis作为缓存技术，只需要导入Spring data Redis的maven坐标即可。")]),t._v(" "),a("h3",{attrs:{id:"_3、spring-cache使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、spring-cache使用方式"}},[t._v("#")]),t._v(" 3、Spring Cache使用方式")]),t._v(" "),a("p",[t._v("在Spring Boot项目中使用Spring Cache的操作步骤(使用redis缓存技术)：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("导入maven坐标")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("spring-boot-starter-data-redis\nspring-boot-starter-cache\n")])])])]),t._v(" "),a("li",[a("p",[t._v("配置application.yml")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("time-to-live")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1800000")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置缓存有效期")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在启动类上加入@EnableCaching注解，开启缓存注解功能")])]),t._v(" "),a("li",[a("p",[t._v("在Controller的方法上加入@Cacheable、@CacheEvict等注解，进行缓存操作")])])]),t._v(" "),a("h2",{attrs:{id:"my-sql主从复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#my-sql主从复制"}},[t._v("#")]),t._v(" My SQL主从复制")]),t._v(" "),a("h3",{attrs:{id:"_1、介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍"}},[t._v("#")]),t._v(" 1、介绍")]),t._v(" "),a("p",[t._v("MySQL主从复制是一个异步的复制过程，底层是基于MysqI数据库自带的二进制日志功能。就是一台或多台MySQL数据心库(slave，即从库)从另一台MySQL数据库(master，即主库）进行日志的复制然后再解析日志并应用到自身，最终实现从库的数据和主库的数据保持一致。MySQL主从复制是MysQL数据库自带功能，无需借助第三方工具。")]),t._v(" "),a("p",[t._v("MysQL复制过程分成三步：")]),t._v(" "),a("ul",[a("li",[t._v("master将改变记录到二进制日志（binary log)")]),t._v(" "),a("li",[t._v("slave将master的binary log拷贝到它的中继日志（relay log)")]),t._v(" "),a("li",[t._v("slave重做中继日志中的事件，将改变应用到自己的数据库中")])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E4%BB%8B%E7%BB%8D.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2、配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置"}},[t._v("#")]),t._v(" 2、配置")]),t._v(" "),a("h4",{attrs:{id:"_2-1-前置条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-前置条件"}},[t._v("#")]),t._v(" 2.1 前置条件")]),t._v(" "),a("p",[t._v("提前准备好两台服务器，分别安装Mysql并启动服务成功")]),t._v(" "),a("ul",[a("li",[t._v("主库Master")]),t._v(" "),a("li",[t._v("从库Slave")])]),t._v(" "),a("h4",{attrs:{id:"_2-2-主库master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-主库master"}},[t._v("#")]),t._v(" 2.2 主库Master")]),t._v(" "),a("p",[t._v("第一步：修改Mysql数据库的配置文件/etc/my.cnf")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[mysqld]\nlog-bin=mysql-bin            #[必须]启用二进制日志\nserver-id=100                #[必须]服务器唯一ID\n\n## Windows系统配置\n[mysqld]\nserver_id=100\n## log_bin=数据库地址\\data\\mysqlbin\nlog_bin=C:\\Program Files\\MySQL\\MySQL Server 8.0\\data\\mysqlbin\n")])])]),a("p",[t._v("第二步：重启Mysql服务")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl restart mysqld\n")])])]),a("p",[t._v("第三步：登录Mysql数据库，执行下面SQL")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("## 旧版\nGRANT REPLICATION SLAVE ON *.* to 'xiaoming'@'%' identified by 'Root@123456';\n\n## 新版\ncreate user 'xiaoming'@'%' identified by '123456';\nflush privileges;\nGRANT REPLICATION SLAVE,replication client ON *.* TO 'xiaoming'@'%';\n")])])]),a("blockquote",[a("p",[t._v("注：上面SQL的作用是创建一个用户xiaoming，密码为Root@123456，并且给xiaoming用户授予REPLICATION SLAVE权限。常用于建立复制时所需要用到的用户权限，也就是slave必须被master授权具有该权限的用户，才能通过该用户复制。")])]),t._v(" "),a("p",[t._v("第四步：登录Mysql数据库，执行下面SQL，记录下结果中File和Position的值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show master status;\n")])])]),a("blockquote",[a("p",[t._v("注：上面SQL的作用是查看Master的状态，执行完此SQL后不要再执行任何操作")])]),t._v(" "),a("h4",{attrs:{id:"_2-3-从库slave"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-从库slave"}},[t._v("#")]),t._v(" 2.3 从库Slave")]),t._v(" "),a("p",[t._v("第一步：修改Mysql数据库的配置文件/etc/my.cnf")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[mysqld]\nserver-id=101   #[必须]服务器唯一ID\n")])])]),a("p",[t._v("第二步：重启Mysql服务")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl restart mysqld\n")])])]),a("p",[t._v("第三步：登录Mysql数据库，执行下面SQL")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("change master to master_host='10.40.16.223',master_port=3306,master_user='xiaoming',master_password='123456',master_log_file='DESKTOP-FASG5H3-bin.000070',master_log_pos=7781;\nstart slave;\n")])])]),a("p",[t._v("第四步：登录Mysql数据库，执行下面SQL，查看从数据库的状态")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show slave status;\n")])])]),a("h3",{attrs:{id:"_3、测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、测试"}},[t._v("#")]),t._v(" 3、测试")]),t._v(" "),a("h2",{attrs:{id:"读写分离案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读写分离案例"}},[t._v("#")]),t._v(" 读写分离案例")]),t._v(" "),a("h3",{attrs:{id:"_1、背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、背景"}},[t._v("#")]),t._v(" 1、背景")]),t._v(" "),a("p",[t._v("面对日益增加的系统访问量，数据库的吞吐量面临着巨大瓶颈。对于同一时刻有大量并发读操作和较少写操作类型的应用系统来说，将数据库拆分为主库和从库，主库负责处理事务性的增删改操作，从库负责处理查询操作，能够有效的避免由数据更新导致的行锁，使得整个系统的查询性能得到极大的改善。")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%A1%88%E4%BE%8B/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%A1%88%E4%BE%8B%E8%83%8C%E6%99%AF.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2、sharding-jdbc介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、sharding-jdbc介绍"}},[t._v("#")]),t._v(" 2、Sharding-JDBC介绍")]),t._v(" "),a("p",[t._v("Sharding-JDBC定位为轻量级Java框架，在Java的JDBC层提供的额外服务。它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，完全兼容JDBC和各种ORM框架。")]),t._v(" "),a("p",[t._v("使用Sharding-JDBC可以在程序中轻松的实现数据库读写分离。")]),t._v(" "),a("ul",[a("li",[t._v("适用于任何基于JDBC的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。")]),t._v(" "),a("li",[t._v("支持任何第三方的数据库连接池，如：DBCP,C3PO,BoneCP, Druid, HikariCP等。")]),t._v(" "),a("li",[t._v("支持任意实现JDBC规范的数据库。目前支持MySQL，Oracle，5QLServer，PostgreSQL以及任何遵循SQL92标准的数据库。")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.shardingsphere"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("sharding-jdbc-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.0.0-RC1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"_3、入门案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、入门案例"}},[t._v("#")]),t._v(" 3、入门案例")]),t._v(" "),a("p",[t._v("使用Sharding-JDBC实现读写分离步骤：")]),t._v(" "),a("ol",[a("li",[t._v("导入maven坐标")]),t._v(" "),a("li",[t._v("在配置文件中配置读写分离规则")]),t._v(" "),a("li",[t._v("在配置文件中配置允许bean定义覆盖配置项")])]),t._v(" "),a("h3",{attrs:{id:"_4、功能测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、功能测试"}},[t._v("#")]),t._v(" 4、功能测试")]),t._v(" "),a("h2",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),a("h3",{attrs:{id:"一、nginx-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、nginx-概述"}},[t._v("#")]),t._v(" 一、Nginx 概述")]),t._v(" "),a("h4",{attrs:{id:"_1、nginx介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、nginx介绍"}},[t._v("#")]),t._v(" 1、Nginx介绍")]),t._v(" "),a("p",[t._v("Nginx是一款轻量级的web 服务器/反向代理服务器及电子邮件（IMAP/POP3)代理服务器。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx的网站有：百度、京东、新浪、网易、腾讯、淘宝等。")]),t._v(" "),a("p",[t._v("Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文： Paw6nep)开发的，第一个公开版本0.1.0发布于2004年10月4日。")]),t._v(" "),a("p",[t._v("官网： https://nginx.org/")]),t._v(" "),a("h4",{attrs:{id:"_2、nginx下载和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、nginx下载和安装"}},[t._v("#")]),t._v(" 2、Nginx下载和安装")]),t._v(" "),a("p",[t._v("可以到Nginx官方网站下载Nginx的安装包，地址为： https://nginx.org/en/download.html")]),t._v(" "),a("p",[t._v("安装过程：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、安装依赖包yum -y install gcc pcre-devel zlib-devel openssl openssl-devel\n2、下载Nginx安装包wget https://nginx.org/download/nginx-1.16.1.tar.gz\n3、解压tar -zxvf nginx-1.16.1.tar.gz\n4、cd nginx-1.16.1\n5、./configure --prefix=/usr/local/nginx\n6、make && make install\n")])])]),a("h4",{attrs:{id:"_3、nginx目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、nginx目录结构"}},[t._v("#")]),t._v(" 3、Nginx目录结构")]),t._v(" "),a("p",[t._v("安装完Nginx后，我们先来熟悉一下Nginx的目录结构，如右图：")]),t._v(" "),a("p",[t._v("重点目录/文件：")]),t._v(" "),a("ul",[a("li",[t._v("conf/nginx.conf           nginx配置文件")]),t._v(" "),a("li",[t._v("html                               存放静态文件( html、cSs、Js等)")]),t._v(" "),a("li",[t._v("logs                                日志目录，存放日志文件")]),t._v(" "),a("li",[t._v("sbin/nginx                     二进制文件，用于启动、停止Nginx服务")])]),t._v(" "),a("h3",{attrs:{id:"二、nginx-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、nginx-命令"}},[t._v("#")]),t._v(" 二、Nginx 命令")]),t._v(" "),a("h4",{attrs:{id:"_1、查看版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、查看版本"}},[t._v("#")]),t._v(" 1、查看版本")]),t._v(" "),a("p",[t._v("查看Nginx版本可以使用命令（需要在sbin目录）")]),t._v(" "),a("p",[t._v("./nginx -v")]),t._v(" "),a("h4",{attrs:{id:"_2、检查配置文件正确性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、检查配置文件正确性"}},[t._v("#")]),t._v(" 2、检查配置文件正确性")]),t._v(" "),a("p",[t._v("在启动Nginx服务之前，可以先检查一下conf/nginx.conf文件配置的是否有错误，命令如下：（需要在sbin目录）")]),t._v(" "),a("p",[t._v("./nginx -t")]),t._v(" "),a("h4",{attrs:{id:"_3、启动和停止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、启动和停止"}},[t._v("#")]),t._v(" 3、启动和停止")]),t._v(" "),a("p",[t._v("启动Nginx服务使用如下命令：./nginx")]),t._v(" "),a("p",[t._v("停止Nginx服务使用如下命令：./nginx -s stop")]),t._v(" "),a("p",[t._v("启动完成后可以查看Nginx进程：ps-ef | grep nginx")]),t._v(" "),a("h4",{attrs:{id:"_4、重新加载配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、重新加载配置文件"}},[t._v("#")]),t._v(" 4、重新加载配置文件")]),t._v(" "),a("p",[t._v("当修改Nginx配置文件后，需要重新加载才能生效，可以使用下面命令重新加载配置文件：")]),t._v(" "),a("p",[t._v("./nginx -s reload")]),t._v(" "),a("h3",{attrs:{id:"三、nginx-配置文件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、nginx-配置文件结构"}},[t._v("#")]),t._v(" 三、Nginx 配置文件结构")]),t._v(" "),a("p",[t._v("Nginx配置文件(conf/nginx.conf)整体分为三部分：")]),t._v(" "),a("ul",[a("li",[t._v("全局块\t\t\t和Nginx运行相关的全局配置")]),t._v(" "),a("li",[t._v("events块        和网络连接相关的配置")]),t._v(" "),a("li",[t._v("http块            代理、缓存、日志记录、虚拟主机配置\n"),a("ul",[a("li",[t._v("http全局块")]),t._v(" "),a("li",[t._v("server块\n"),a("ul",[a("li",[t._v("Server全局块")]),t._v(" "),a("li",[t._v("location块")])])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：http块中可以配置多个Server块，每个Server块中可以配置多个location块。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Nginx/Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84%E4%BB%8B%E7%BB%8D.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"四、nginx-具体应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、nginx-具体应用"}},[t._v("#")]),t._v(" 四、Nginx 具体应用")]),t._v(" "),a("h4",{attrs:{id:"_1、部署静态资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、部署静态资源"}},[t._v("#")]),t._v(" 1、部署静态资源")]),t._v(" "),a("p",[t._v("Nginx可以作为静态web服务器来部署静态资源。静态资源指在服务端真实存在并且能够直接展示的一些文件，比如常见的html页面、css文件、js文件、图片、视频等资源。")]),t._v(" "),a("p",[t._v("相对于Tomcat，Nginx处理静态资源的能力更加高效，所以在生产环境下，一般都会将静态资源部署到Nginx中。将静态资源部署到Nginx非常简单，只需要将文件复制到Nginx安装目录下的html目录中即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server {\n\tlisten 80;\t\t#监听端口\n\tserver_name localhost;\t#服务器名称\n\tlocation / {\t\t#匹配客户端请求url\n\t\troot html;\t\t#指定静态资源根目录\n\t\tindex index.html;\t\t#指定默认首页\n\t}\n}\n")])])]),a("h4",{attrs:{id:"_2、反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、反向代理"}},[t._v("#")]),t._v(" 2、反向代理")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("正向代理\n是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。")]),t._v(" "),a("p",[t._v("正向代理的典型用途是为在防火墙内的局域网客户端提供访问Internet的途径。")]),t._v(" "),a("p",[t._v("正向代理一般是在客户端设置代理服务器，通过代理服务器转发请求，最终访问到目标服务器。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Nginx/Nginx%E5%85%B7%E4%BD%93%E5%BA%94%E7%94%A8%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86.png",alt:""}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("反向代理\n反向代理服务器位于用户与目标服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源，反向代理服务器负责将请求转发给目标服务器。")]),t._v(" "),a("p",[t._v("用户不需要知道目标服务器的地址，也无须在用户端作任何设定。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Nginx/Nginx%E5%85%B7%E4%BD%93%E5%BA%94%E7%94%A8%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("配置反向代理")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server{\n\tlisten 82;\n\tserver_name localhost;\n\tlocation / {\n\t\tproxy_pass http://192.168.138.101:8080;\t#反向代理配置，将请求转发到指定服务\n\t}\n}\n")])])]),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Nginx/Nginx%E5%85%B7%E4%BD%93%E5%BA%94%E7%94%A8%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_3、负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、负载均衡"}},[t._v("#")]),t._v(" 3、负载均衡")]),t._v(" "),a("p",[t._v("早期的网站流量和业务功能都比较简单，单台服务器就可以满足基本需求，但是随着互联网的发展业务流量越来越大并且业务逻辑也越来越复杂，单台服务器的性能及单点故障问题就凸显出来了，因此需要多台服务器组成应用集群，进行性能的水平扩展以及避免单点故障出现。")]),t._v(" "),a("ul",[a("li",[t._v("应用集群：将同一应用部署到多台机器上，组成应用集群，接收负载均衡器分发的请求，进行业务处理并返回响应数据")]),t._v(" "),a("li",[t._v("负载均衡器：将用户请求根据对应的负载均衡算法分发到应用集群中的一台服务器进行处理")])]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Nginx/Nginx%E5%85%B7%E4%BD%93%E5%BA%94%E7%94%A8%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png",alt:""}})]),t._v(" "),a("p",[t._v("配置负载均衡：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("upstream targetserver{\t#upstream指令可以定义一组服务器\tserver 192.168.138.101:8080;\n\tserver 192.168.138.101:8081;\n}\nserver {\n\tlisten 8080;\n\tserver_name localhost;\n\tlocation / {\n\t\tproxy_pass http://targetserver;\n\t}\n}\n")])])]),a("p",[t._v("负载均衡策略：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("轮询")]),t._v(" "),a("td",[t._v("默认方式")])]),t._v(" "),a("tr",[a("td",[t._v("weight")]),t._v(" "),a("td",[t._v("权重方式")])]),t._v(" "),a("tr",[a("td",[t._v("ip_hash")]),t._v(" "),a("td",[t._v("依据ip分配方式")])]),t._v(" "),a("tr",[a("td",[t._v("least_conn")]),t._v(" "),a("td",[t._v("依据最少连接方式")])]),t._v(" "),a("tr",[a("td",[t._v("url_hash")]),t._v(" "),a("td",[t._v("依据url分配方式")])]),t._v(" "),a("tr",[a("td",[t._v("fair")]),t._v(" "),a("td",[t._v("依据响应时间方式")])])])]),t._v(" "),a("h2",{attrs:{id:"前后端分离开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离开发"}},[t._v("#")]),t._v(" 前后端分离开发")]),t._v(" "),a("ul",[a("li",[t._v("开发人员同时负责前端和后端代码开发，分工不明确")]),t._v(" "),a("li",[t._v("开发效率低")]),t._v(" "),a("li",[t._v("前后端代码混合在一个工程中，不便于管理")]),t._v(" "),a("li",[t._v("对开发人员要求高，人员招聘困难")])]),t._v(" "),a("h3",{attrs:{id:"前后端分离开发-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离开发-2"}},[t._v("#")]),t._v(" 前后端分离开发")]),t._v(" "),a("h4",{attrs:{id:"_1、介绍-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍-2"}},[t._v("#")]),t._v(" 1、介绍")]),t._v(" "),a("p",[t._v("前后端分离开发，就是在项目开发过程中，对于前端代码的开发由专门的前端开发人员负责，后端代码则由后端开发人员负责，这样可以做到分工明确、各司其职，提高开发效率，前后端代码并行开发，可以加快项目开发进度。目前，前后端分离开发方式已经被越来越多的公司所采用，成为当前项目开发的主流开发方式。")]),t._v(" "),a("p",[t._v("前后端分离开发后，从工程结构上也会发生变化，即前后端代码不再混合在同一个maven工程中，而是分为前端工程和后端工程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91%E4%BB%8B%E7%BB%8D.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_2、开发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、开发流程"}},[t._v("#")]),t._v(" 2、开发流程")]),t._v(" "),a("p",[t._v("前后端分离开发后，面临一个问题，就是前端开发人员和后端开发人员如何进行配合来共同开发一个项目?")]),t._v(" "),a("p",[t._v("可以按照如下流程进行：")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B.png",alt:""}})]),t._v(" "),a("p",[t._v("接口(API接口)就是一个http的请求地址，主要就是去定义：请求路径、请求方式、请求参数、响应数据等内容。")]),t._v(" "),a("h4",{attrs:{id:"_3、前端技术栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、前端技术栈"}},[t._v("#")]),t._v(" 3、前端技术栈")]),t._v(" "),a("p",[t._v("开发工具")]),t._v(" "),a("ul",[a("li",[t._v("Visual Studio Code")]),t._v(" "),a("li",[t._v("hbuilder")])]),t._v(" "),a("p",[t._v("技术框架")]),t._v(" "),a("ul",[a("li",[t._v("nodejs")]),t._v(" "),a("li",[t._v("VUE")]),t._v(" "),a("li",[t._v("ElementUl")]),t._v(" "),a("li",[t._v("mock")]),t._v(" "),a("li",[t._v("webpack")])]),t._v(" "),a("h3",{attrs:{id:"yapi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yapi"}},[t._v("#")]),t._v(" Yapi")]),t._v(" "),a("h4",{attrs:{id:"_1、介绍-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍-3"}},[t._v("#")]),t._v(" 1、介绍")]),t._v(" "),a("p",[t._v("YApi是高效、易用、功能强大的 api管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护API，YApi还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。")]),t._v(" "),a("p",[t._v("YApi让接口开发更简单高效，让接口的管理更具可读性、可维护性，让团队协作更合理。")]),t._v(" "),a("p",[t._v("源码地址：https://github.com/YMFE/yapi")]),t._v(" "),a("p",[t._v("要使用YApi，需要自己进行部署。")]),t._v(" "),a("h4",{attrs:{id:"_2、使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用"}},[t._v("#")]),t._v(" 2、使用")]),t._v(" "),a("p",[t._v("使用YApi，可以执行下面操作：")]),t._v(" "),a("ul",[a("li",[t._v("添加项目")]),t._v(" "),a("li",[t._v("添加分类")]),t._v(" "),a("li",[t._v("添加接口")]),t._v(" "),a("li",[t._v("编辑接口")]),t._v(" "),a("li",[t._v("查看接口")])]),t._v(" "),a("h3",{attrs:{id:"swagger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swagger"}},[t._v("#")]),t._v(" Swagger")]),t._v(" "),a("h4",{attrs:{id:"_1、介绍-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍-4"}},[t._v("#")]),t._v(" 1、介绍")]),t._v(" "),a("p",[t._v("使用Swagger你只需要按照它的规范去定义接口及接口相关的信息，再通过Swagger衍生出来的一系列项目和工具，就可以做到生成各种格式的接口文档，以及在线接口调试页面等等。")]),t._v(" "),a("p",[t._v("官网： https://swagger.io/")]),t._v(" "),a("p",[t._v("knife4j是为Java MVC框架集成Swagger生成Api文档的增强解决方案。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.github.xiaoymin"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("knife4j-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3.0.2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h4",{attrs:{id:"_2、使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用方式"}},[t._v("#")]),t._v(" 2、使用方式")]),t._v(" "),a("p",[t._v("操作步骤：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("导入knife4j的maven坐标")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.github.xiaoymin"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("knife4j-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3.0.2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("导入knife4j相关配置类（WebMvcConfig）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableSwagger2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableKnife4j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebMvcConfigurationSupport")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    \n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Docket")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRestApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文档类型")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Docket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DocumentationType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SWAGGER_2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apiInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apiInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestHandlerSelectors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basePackage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.itheima.reggie.controller"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PathSelectors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apiInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiInfoBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"瑞吉外卖"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"瑞吉外卖接口文档"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("设置静态资源（WebMvcConfig类中的addResourceHandlers方法），否则接口文档页面无法访问")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addResourceHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doc.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addResourceLocations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:/META-INF/resources/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nregistry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addResourceHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/webjars/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addResourceLocations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:/META-INF/resources/webjars/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在LoginCheckFilter中设置不需要处理的请求路径")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/Swagger/Swagger%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A44%E5%9C%A8LoginCheckFilter%E4%B8%AD%E8%AE%BE%E7%BD%AE.png",alt:""}})])])]),t._v(" "),a("h4",{attrs:{id:"_3、常用注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、常用注解"}},[t._v("#")]),t._v(" 3、常用注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("注解")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("@Api")]),t._v(" "),a("td",[t._v("用在请求的类上，例如Controller，表示对类的说明")])]),t._v(" "),a("tr",[a("td",[t._v("@ApiModel")]),t._v(" "),a("td",[t._v("用在类上，通常是实体类，表示一个返回响应数据的信息")])]),t._v(" "),a("tr",[a("td",[t._v("@ApiModelProperty")]),t._v(" "),a("td",[t._v("用在属性上，描述响应类的属性")])]),t._v(" "),a("tr",[a("td",[t._v("@ApiOperation")]),t._v(" "),a("td",[t._v("用在请求的方法上，说明方法的用途、作用")])]),t._v(" "),a("tr",[a("td",[t._v("@ApilmplicitParams")]),t._v(" "),a("td",[t._v("用在请求的方法上，表示一组参数说明")])]),t._v(" "),a("tr",[a("td",[t._v("@ApilmplicitParam")]),t._v(" "),a("td",[t._v("用在@ApilmplicitParams注解中，指定一个请求参数的各个方面")])])])]),t._v(" "),a("h3",{attrs:{id:"项目部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目部署"}},[t._v("#")]),t._v(" 项目部署")]),t._v(" "),a("h4",{attrs:{id:"_1、部署架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、部署架构"}},[t._v("#")]),t._v(" 1、部署架构")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_2、部署环境说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、部署环境说明"}},[t._v("#")]),t._v(" 2、部署环境说明")]),t._v(" "),a("p",[t._v("服务器：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("192.168.138.100（服务器A)")]),t._v(" "),a("p",[t._v("Nginx：部署前端项目、配置反向代理")]),t._v(" "),a("p",[t._v("Mysql：主从复制结构中的主库")])]),t._v(" "),a("li",[a("p",[t._v("192.168.138.101（服务器B)")]),t._v(" "),a("p",[t._v("jdk：运行Java项目")]),t._v(" "),a("p",[t._v("git：版本控制工具")]),t._v(" "),a("p",[t._v("maven：项目构建工具\njar： Spring Boot项目打成jar包基于内置Tomcat运行")]),t._v(" "),a("p",[t._v("Mysql：主从复制结构中的从库")])]),t._v(" "),a("li",[a("p",[t._v("172.17.2.94（服务器C)")]),t._v(" "),a("p",[t._v("Redis：缓存中间件")])])]),t._v(" "),a("h4",{attrs:{id:"_3、部署前端项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、部署前端项目"}},[t._v("#")]),t._v(" 3、部署前端项目")]),t._v(" "),a("p",[t._v("第一步：在服务器A中安装Nginx，将课程资料中的dist目录上传到Nginx的html目录下")]),t._v(" "),a("p",[t._v("第二步：修改Nginx配置文件nginx.conf")]),t._v(" "),a("p",[a("img",{attrs:{src:"%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E7%AC%AC%E4%BA%8C%E6%AD%A5%E4%BF%AE%E6%94%B9Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6nginx.conf.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_4、部署后端项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、部署后端项目"}},[t._v("#")]),t._v(" 4、部署后端项目")]),t._v(" "),a("p",[t._v("第一步：在服务器B中安装jdk、git、maven、MySQL，使用git clone命令将git远程仓库的代码克隆下来")]),t._v(" "),a("p",[t._v("第二步：将资料中提供的reggieStart.sh文件上传到服务器B，通过chmod命令设置执行权限")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("chmod 777 reggieStart.sh\n")])])]),a("p",[t._v("第三步：执行reggiestart.sh脚本文件，自动部署项目")])])}),[],!1,null,null,null);a.default=e.exports}}]);