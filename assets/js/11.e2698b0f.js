(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{439:function(E,B,A){"use strict";A.r(B);var s=A(2),e=Object(s.a)({},(function(){var E=this,B=E._self._c;return B("ContentSlotsDistributor",{attrs:{"slot-key":E.$parent.slotKey}},[B("h1",{attrs:{id:"redis"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[E._v("#")]),E._v(" Redis")]),E._v(" "),B("h2",{attrs:{id:"一、redis-入门概述"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#一、redis-入门概述"}},[E._v("#")]),E._v(" 一、Redis 入门概述")]),E._v(" "),B("h3",{attrs:{id:"_1、redis-是什么"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_1、redis-是什么"}},[E._v("#")]),E._v(" 1、Redis 是什么")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("Redis：REmote Dictionary Server（远程字典服务器）")])]),E._v(" "),B("li",[B("p",[E._v("官网解释")]),E._v(" "),B("p",[E._v("Remote Dictionary Server(远程字典服务)是完全开源的，使用ANSIC语言编写遵守BSD协议，是一个高性能的Key-Value数据库提供了丰富的数据结构，例如String、Hash、List、Set、SortedSet等等。数据是存在内存中的，同时Redis支持事务、持久化、LUA脚本、发布/订阅、缓存淘汰、流技术等多种功能特性提供了主从模式、Redis Sentinel和Redis Cluster集群架构方案")])]),E._v(" "),B("li",[B("p",[E._v("Redis之父安特雷兹")]),E._v(" "),B("ul",[B("li",[E._v("Github：https://github.com/antirez")]),E._v(" "),B("li",[E._v("个人博客：http://antirez.com/latest/0")])])])]),E._v(" "),B("h3",{attrs:{id:"_2、redis-能干嘛"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2、redis-能干嘛"}},[E._v("#")]),E._v(" 2、Redis 能干嘛")]),E._v(" "),B("h4",{attrs:{id:"_2-1-主流功能与应用"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-主流功能与应用"}},[E._v("#")]),E._v(" 2.1 主流功能与应用")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("分布式缓存，挡在mysql数据库之前的带刀护卫")]),E._v(" "),B("p",[E._v("与传统数据库关系(mysql)相比")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("Redis是key-value数据库(NoSQL一种)，mysql是关系数据库")])]),E._v(" "),B("li",[B("p",[E._v("Redis数据操作主要在内存，而mysql主要存储在磁盘")])]),E._v(" "),B("li",[B("p",[E._v("Redis在某一些场景使用中要明显优于mysql，比如计数器、排行榜等方面")])]),E._v(" "),B("li",[B("p",[E._v("Redis通常用于一些特定场景，需要与Mysql一起配合使用")])])]),E._v(" "),B("p",[E._v("两者并不是相互替换和竞争关系，而是共用和配合使用")])]),E._v(" "),B("li",[B("p",[E._v("内存存储和持久化(RDB+AOF)redis支持异步将内存中的数据写到硬盘上，同时不影响继续服务")])]),E._v(" "),B("li",[B("p",[E._v("高可用架构搭配")]),E._v(" "),B("ul",[B("li",[E._v("单机")]),E._v(" "),B("li",[E._v("主从")]),E._v(" "),B("li",[E._v("哨兵")]),E._v(" "),B("li",[E._v("集群")])])]),E._v(" "),B("li",[B("p",[E._v("缓存穿透、击穿、雪崩")])]),E._v(" "),B("li",[B("p",[E._v("分布式锁")])]),E._v(" "),B("li",[B("p",[E._v(".队列")]),E._v(" "),B("p",[E._v("Reids提供list和set操作，这使得Redis能作为一个很好的消息队列平台来使用。")]),E._v(" "),B("p",[E._v("我们常通过Reids的队列功能做购买限制。比如到节假日或者推广期间，进行一些活动，对用户购买行为进行限制，限制今天只能购买几次商品或者一段时间内只能购买一次。也比较适合适用。")])]),E._v(" "),B("li",[B("p",[E._v("排行版＋点赞")]),E._v(" "),B("p",[E._v("在互联网应用中，有各种各样的排行榜，如电商网站的月度销量排行榜、社交APP的礼物排行榜、小程序的投票排行榜等等。Redis提供的zset数据类型能够快速实现这些复杂的排行榜。")]),E._v(" "),B("p",[E._v("比如小说网站对小说进行排名，根据排名，将排名靠前的小说推荐给用户")])]),E._v(" "),B("li",[B("p",[E._v("......")])])]),E._v(" "),B("h4",{attrs:{id:"_2-2-总体功能概述"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-总体功能概述"}},[E._v("#")]),E._v(" 2.2 总体功能概述")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/Redis%E8%83%BD%E5%B9%B2%E5%98%9B%E6%80%BB%E4%BD%93%E5%8A%9F%E8%83%BD%E6%A6%82%E8%BF%B0.jpg",alt:""}})]),E._v(" "),B("h4",{attrs:{id:"_2-3-优势"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优势"}},[E._v("#")]),E._v(" 2.3 优势")]),E._v(" "),B("ul",[B("li",[E._v("性能极高-Redis能读的速度是110000次/秒。写的速度是81000次/秒")]),E._v(" "),B("li",[E._v("Redis数据类型丰富，不仅仅支持简单的key-value类型的数据，同时还提供list。set，zset。hash等数据结构的存储")]),E._v(" "),B("li",[E._v("Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用")]),E._v(" "),B("li",[E._v("Redis支持数据的备份，即master-slave模式的数据备份")])]),E._v(" "),B("h4",{attrs:{id:"_2-4-小总结"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-小总结"}},[E._v("#")]),E._v(" 2.4 小总结")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/Redis%E8%83%BD%E5%B9%B2%E5%98%9B%E5%B0%8F%E6%80%BB%E7%BB%93.jpg",alt:""}})]),E._v(" "),B("h3",{attrs:{id:"_3、redis-去哪下载"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_3、redis-去哪下载"}},[E._v("#")]),E._v(" 3、Redis 去哪下载")]),E._v(" "),B("ol",[B("li",[E._v("官网地址\n"),B("ul",[B("li",[E._v("英文：https://redis.io/")]),E._v(" "),B("li",[E._v("中文：\n"),B("ul",[B("li",[E._v("http://www.redis.cn/")]),E._v(" "),B("li",[E._v("https://www.redis.com.cn/documention.html")])])])])]),E._v(" "),B("li",[E._v("下载安装包\n"),B("ul",[B("li",[E._v("https://redis.io/download/")]),E._v(" "),B("li",[E._v("安装包为：redis-7.0.10.tar.gz")])])]),E._v(" "),B("li",[E._v("其它文档资料\n"),B("ul",[B("li",[E._v("Redis 源码地址：https://github.com/redis/redis")]),E._v(" "),B("li",[E._v("Redis 在线测试：https://try.redis.io/")]),E._v(" "),B("li",[E._v("Redis 命令参考：http://doc.redisfans.com/")])])])]),E._v(" "),B("h3",{attrs:{id:"_4、redis-怎么玩"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4、redis-怎么玩"}},[E._v("#")]),E._v(" 4、Redis 怎么玩")]),E._v(" "),B("ul",[B("li",[E._v("官网")]),E._v(" "),B("li",[E._v("多种数据类型基本操作和配置")]),E._v(" "),B("li",[E._v("持久化和复制，RDB/AOF")]),E._v(" "),B("li",[E._v("事务的控制")]),E._v(" "),B("li",[E._v("复制，集群等")])]),E._v(" "),B("h3",{attrs:{id:"_5、redis-迭代演化和-redis7-新特性浅谈"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_5、redis-迭代演化和-redis7-新特性浅谈"}},[E._v("#")]),E._v(" 5、Redis 迭代演化和 Redis7 新特性浅谈")]),E._v(" "),B("h4",{attrs:{id:"_5-1-时间推移-版本升级"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-时间推移-版本升级"}},[E._v("#")]),E._v(" 5.1 时间推移，版本升级")]),E._v(" "),B("ul",[B("li",[E._v("VCR：https://www.bilibili.com/video/BV1oW411u75R?p=1")]),E._v(" "),B("li",[E._v("Redis之父安特雷兹的发言：http://antirez.com/news/132")])]),E._v(" "),B("h4",{attrs:{id:"_5-2-redis版本迭代推演介绍"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-redis版本迭代推演介绍"}},[E._v("#")]),E._v(" 5.2 Redis版本迭代推演介绍")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("几个里程碑式的重要版本")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis%E5%85%A5%E9%97%A8%E6%A6%82%E8%BF%B0/Redis%E7%89%88%E6%9C%AC%E8%BF%AD%E4%BB%A3%E5%8E%86%E5%8F%B2%E5%A4%A7%E7%89%88%E6%9C%AC.jpg",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("命名规则")]),E._v(" "),B("p",[E._v("Redis从发布至今，已经有十余年的时光了，一直遵循着自己的命名规则：")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("版本号第二位如果是奇数，则为非稳定版本 如2.7、2.9、3.1")])]),E._v(" "),B("li",[B("p",[E._v("版本号第二位如果是偶数，则为稳定版本 如2.6、2.8、3.0、3.2")])])]),E._v(" "),B("p",[E._v("当前奇数版本就是下一个稳定版本的开发版本，如2.9版本是3.0版本的开发版本")]),E._v(" "),B("p",[E._v("我们可以通过redis.io官网来下载自己感兴趣的版本进行源码阅读：")]),E._v(" "),B("p",[E._v("历史发布版本的源码：https://download.redis.io/releases/")])])]),E._v(" "),B("h4",{attrs:{id:"_5-3-redis7-o新特性概述"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-redis7-o新特性概述"}},[E._v("#")]),E._v(" 5.3 Redis7.O新特性概述")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("https://github.com/redis/redis/releases 新特性")])]),E._v(" "),B("li",[B("p",[E._v("部分新特性总览")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("Redis Functions")])]),E._v(" "),B("li",[B("p",[E._v("Client-eviction")])]),E._v(" "),B("li",[B("p",[E._v("Multi-part AOF")])]),E._v(" "),B("li",[B("p",[E._v("ACL V2")])]),E._v(" "),B("li",[B("p",[E._v("新增命令")])]),E._v(" "),B("li",[B("p",[E._v("listpack替代ziplist")])]),E._v(" "),B("li",[B("p",[E._v("底层性能提升(和编码关系不大)")])]),E._v(" "),B("li",[B("p",[E._v(".......")])])])])]),E._v(" "),B("h4",{attrs:{id:"_5-4-本次将对redis7的一部分新特性做说明-not-all"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-本次将对redis7的一部分新特性做说明-not-all"}},[E._v("#")]),E._v(" 5.4 本次将对Redis7的一部分新特性做说明(not all)")]),E._v(" "),B("p",[E._v("大体和之前的redis版本保持一致和稳定，主要是自身底层性能和资源利用率上的优化和提高，如果你生产上系统稳定，不用着急升级到最新的redis7版本，当然，O(∩_∩)O哈哈~，如果你是从零开始的新系统，直接上Redis7.0-GA版。^_^")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("名称")]),E._v(" "),B("th",[E._v("说明")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("多AOF文件支持")]),E._v(" "),B("td",[E._v("7.0 版本中一个比较大的变化就是 aof 文件由一个变成了多个，主要分为两种类型：基本文件(base files)、增量文件(incr files)，请注意这些文件名称是复数形式说明每一类文件不仅仅只有一个。在此之外还引入了一个清单文件(manifest) 用于跟踪文件以及文件的创建和应用顺序（恢复）")])]),E._v(" "),B("tr",[B("td",[E._v("config命令增强")]),E._v(" "),B("td",[E._v("对于Config Set 和Get命令，支持在一次调用过程中传递多个配置参数。例如，现在我们可以在执行一次Config Set命令中更改多个参数： config set maxmemory 10000001 maxmemory-clients 50% port 6399")])]),E._v(" "),B("tr",[B("td",[E._v("限制客户端内存使用Client-eviction")]),E._v(" "),B("td",[E._v("一旦 Redis 连接较多，再加上每个连接的内存占用都比较大的时候， Redis总连接内存占用可能会达到maxmemory的上限，可以增加允许限制所有客户端的总内存使用量配置项，redis.config 中对应的配置项// 两种配置形式：指定内存大小、基于 maxmemory 的百分比。maxmemory-clients 1gmaxmemory-clients 10%")])]),E._v(" "),B("tr",[B("td",[E._v("listpack紧凑列表调整")]),E._v(" "),B("td",[E._v("listpack 是用来替代 ziplist 的新数据结构，在 7.0 版本已经没有 ziplist 的配置了（6.0版本仅部分数据类型作为过渡阶段在使用）listpack 已经替换了 ziplist 类似 hash-max-ziplist-entries 的配置")])]),E._v(" "),B("tr",[B("td",[E._v("访问安全性增强ACLV2")]),E._v(" "),B("td",[E._v("在redis.conf配置文件中，protected-mode默认为yes，只有当你希望你的客户端在没有授权的情况下可以连接到Redis server的时候可以将protected-mode设置为no")])]),E._v(" "),B("tr",[B("td",[E._v("Redis Functions")]),E._v(" "),B("td",[E._v("Redis函数，一种新的通过服务端脚本扩展Redis的方式，函数与数据本身一起存储。简言之，redis自己要去抢夺Lua脚本的饭碗")])]),E._v(" "),B("tr",[B("td",[E._v("RDB保存时间调整")]),E._v(" "),B("td",[E._v("将持久化文件RDB的保存规则发生了改变，尤其是时间记录频度变化")])]),E._v(" "),B("tr",[B("td",[E._v("命令新增和变动")]),E._v(" "),B("td",[E._v("Zset (有序集合)增加 ZMPOP、BZMPOP、ZINTERCARD 等命令Set (集合)增加 SINTERCARD 命令LIST (列表)增加 LMPOP、BLMPOP ，从提供的键名列表中的第一个非空列表键中弹出一个或多个元素。")])]),E._v(" "),B("tr",[B("td",[E._v("性能资源利用率、安全、等改进")]),E._v(" "),B("td",[E._v("自身底层部分优化改动，Redis核心在许多方面进行了重构和改进主动碎片整理V2：增强版主动碎片整理，配合Jemalloc版本更新，更快更智能，延时更低HyperLogLog改进：在Redis5.0中，HyperLogLog算法得到改进，优化了计数统计时的内存使用效率，7更加优秀更好的内存统计报告如果不为了API向后兼容，我们将不再使用slave一词......(政治正确)")])])])]),E._v(" "),B("h2",{attrs:{id:"二、redis-安装配置"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#二、redis-安装配置"}},[E._v("#")]),E._v(" 二、Redis 安装配置")]),E._v(" "),B("h3",{attrs:{id:"_1、自己购买云服务器"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_1、自己购买云服务器"}},[E._v("#")]),E._v(" 1、自己购买云服务器")]),E._v(" "),B("p",[E._v("自己购买阿里云、青牛云、腾讯云或华为云服务器，自带CentoOS或者Ubuntu环境，直接开干")]),E._v(" "),B("h3",{attrs:{id:"_2、vmware本地虚拟机"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2、vmware本地虚拟机"}},[E._v("#")]),E._v(" 2、VMWare本地虚拟机")]),E._v(" "),B("p",[E._v("如何查看自己的linux是32位还是64位")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[E._v("getconf LONG_BIT`\n")])])]),B("p",[E._v("返回是多少就是几位")]),E._v(" "),B("h3",{attrs:{id:"_3、redis的安装"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_3、redis的安装"}},[E._v("#")]),E._v(" 3、Redis的安装")]),E._v(" "),B("p",[E._v("小白同学注意，日常用什么系统安装redis?")]),E._v(" "),B("ul",[B("li",[E._v("由于企业里面做Redis开发，99%都是Linux版的运用和安装，几乎不会涉及到Windows版，上一步的讲解只是为了知识的完整性，Windows版不作为重点，同学可以下去自己玩，企业实战就认一个版：Linux")])]),E._v(" "),B("p",[E._v("Linux版安装")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("Linux环境安装 Redis 必须先具备 gcc 编译环境")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("什么是gcc")]),E._v(" "),B("p",[E._v("gcc是linux下的一个编译程序，是C程序的编译工具。")]),E._v(" "),B("p",[E._v("GCC(GNU Compiler Collection) 是 GNU(GNU's Not Unix) 计划提供的编译器家族，它能够支持 C, C++, Objective-C, Fortran, Java 和 Ada 等等程序设计语言前端，同时能够运行在 x86, x86-64, IA-64, PowerPC, SPARC和Alpha 等等几乎目前所有的硬件平台上。鉴于这些特征，以及 GCC 编译代码的高效性，使得 GCC 成为绝大多数自由软件开发编译的首选工具。虽然对于程序员们来说，编译器只是一个工具，除了开发和维护人员，很少有人关注编译器的发展，但是 GCC 的影响力是如此之大，它的性能提升甚至有望改善所有的自由软件的运行效率，同时它的内部结构的变化也体现出现代编译器发展的新特征。")])]),E._v(" "),B("li",[B("p",[E._v("查看")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[E._v("gcc "),B("span",{pre:!0,attrs:{class:"token parameter variable"}},[E._v("-v")]),E._v("\n\n")])])])]),E._v(" "),B("li",[B("p",[E._v("安装")]),E._v(" "),B("p",[E._v("安装之前需要具备c++库环境")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[E._v("yum "),B("span",{pre:!0,attrs:{class:"token parameter variable"}},[E._v("-y")]),E._v(" "),B("span",{pre:!0,attrs:{class:"token function"}},[E._v("install")]),E._v(" gcc-c++\n")])])])])])]),E._v(" "),B("li",[B("p",[E._v("版本选择")]),E._v(" "),B("p",[E._v("查看自己 Redis 版本的命令")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[E._v("redis-server "),B("span",{pre:!0,attrs:{class:"token parameter variable"}},[E._v("-v")]),E._v("\n")])])]),B("p",[E._v("安全Bug 按照官网提示，升级成为 6.0.8及以上")]),E._v(" "),B("p",[E._v("本次使用 Redis7.0")])]),E._v(" "),B("li",[B("p",[E._v("Redis7 安装步骤")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("下载获得 redis-7.0.10.tar.gz 后将它放入我们的 Linux 目录 /opt")])]),E._v(" "),B("li",[B("p",[E._v("/opt目录下解压 redis")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[B("span",{pre:!0,attrs:{class:"token function"}},[E._v("tar")]),E._v(" "),B("span",{pre:!0,attrs:{class:"token parameter variable"}},[E._v("-zxvf")]),E._v(" redis-7.0.10.tar.gz\n\n")])])])]),E._v(" "),B("li",[B("p",[E._v("进入目录")])]),E._v(" "),B("li",[B("p",[E._v("在redis-7.0.0目录下执行make命令")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[B("span",{pre:!0,attrs:{class:"token function"}},[E._v("make")]),E._v(" "),B("span",{pre:!0,attrs:{class:"token operator"}},[E._v("&&")]),E._v(" "),B("span",{pre:!0,attrs:{class:"token function"}},[E._v("make")]),E._v(" "),B("span",{pre:!0,attrs:{class:"token function"}},[E._v("install")]),E._v("\n")])])]),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/Redis%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("查看默认安装目录: usr/local/bin")]),E._v(" "),B("p",[E._v("Linux 下的 /usr/local 类似我们 windows 系统的 C:\\Program Files")]),E._v(" "),B("ul",[B("li",[E._v("redis-benchmark：性能测试工具，服务启动后运行该命令，看看自己本子性能如何")]),E._v(" "),B("li",[E._v("redis-check-aof：修复有问题的AOF文件，rdb和aof后面讲")]),E._v(" "),B("li",[E._v("redis-check-dump：修复有问题的dump.rdb文件")]),E._v(" "),B("li",[E._v("redis-cli：客户端，操作入口")]),E._v(" "),B("li",[E._v("redis-sentinel：redis集群使用")]),E._v(" "),B("li",[E._v("redis-server：Redis服务器启动命令")])])]),E._v(" "),B("li",[B("p",[E._v("将默认的redis.conf拷考贝到自己定义好的一个路径下，比如/myredis")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[B("span",{pre:!0,attrs:{class:"token function"}},[E._v("cp")]),E._v(" redis.conf /myredis/\n\n")])])])]),E._v(" "),B("li",[B("p",[E._v("修改/myredis目录下redis.conf配管文件做初始化设置")]),E._v(" "),B("p",[E._v("redis.conf配置文件，改完后确保生效，记得重启，记得重启")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("默认daemonize no        改为 daemonize yes")])]),E._v(" "),B("li",[B("p",[E._v("默认protected-mode yes   改为 protected-mode no")])]),E._v(" "),B("li",[B("p",[E._v("默认bind 127.0.0.1       改为 直接注释掉(默认bind 127.0.0.1只能本机访问)或改成本机IP地址，否则影响远程IP连接")])]),E._v(" "),B("li",[B("p",[E._v("添加redis密码           改为 requirepass 你自己设置的密码")])])])]),E._v(" "),B("li",[B("p",[E._v("启动服务")]),E._v(" "),B("p",[E._v("/usr/local/bin 目录下运行 redis-server，启用 /myredis 目录下的 redis.conf 文件")]),E._v(" "),B("div",{staticClass:"language-shell extra-class"},[B("pre",{pre:!0,attrs:{class:"language-shell"}},[B("code",[E._v("redis-server /myredis/redis7.conf\n\n")])])])]),E._v(" "),B("li",[B("p",[E._v("连接服务")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/Redis%E5%AE%89%E8%A3%85%E4%B8%AD%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("大家知道Redis端口为啥是6379么?")]),E._v(" "),B("p",[E._v('Redis的默认端口是6379，是由手机键盘字母MERZ的位置决定的。MERZ在Antirez的朋友圈语言中是"愚蠢和傻B"的代名词，它源于意大利广告女郎Alessia Merz在电视节目上说了一堆愚蠢的话，redis之父对她有"特殊"印象，就给她弄成端口号了')])]),E._v(" "),B("li",[B("p",[E._v("永远的helloworld")])]),E._v(" "),B("li",[B("p",[E._v("关闭")]),E._v(" "),B("ul",[B("li",[E._v("单实例关闭：redis-cli -a 123456 shutdown")]),E._v(" "),B("li",[E._v("多实例关闭，指定端口关闭：redis-cli -p 6379 shutdown")])])])])]),E._v(" "),B("li",[B("p",[E._v("Redis7 卸载步骤")]),E._v(" "),B("ol",[B("li",[E._v("停止 redis-server 服务")]),E._v(" "),B("li",[E._v("删除 /usr/local/lib 目录下与redis相关的文件")])])])]),E._v(" "),B("p",[E._v("docker版的redis安装配置参考：https://www.bilibili.com/video/BV1gr4y1U7CY/?spm_id_from=333.337.search-card.all.click&vd_source=fe27230f0c2dfb94c1429fd039a0655a")]),E._v(" "),B("h2",{attrs:{id:"三、redis-10大数据类型"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#三、redis-10大数据类型"}},[E._v("#")]),E._v(" 三、Redis 10大数据类型")]),E._v(" "),B("h3",{attrs:{id:"_1、which-10"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_1、which-10"}},[E._v("#")]),E._v(" 1、which 10")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/which10/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png",alt:""}})]),E._v(" "),B("p",[E._v("提前声明：这里说的数据类型是value的数据类型，key的类型都是字符串")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("redis 字符串（String）")]),E._v(" "),B("p",[E._v("string是redis最基本的类型，一个key对应一个value。")]),E._v(" "),B("p",[E._v("string类型是二进制安全的，意思是redis的string可以包含任何数据，比如jpg图片或者序列化的对象 。")]),E._v(" "),B("p",[E._v("string类型是Redis最基本的数据类型，一个redis中字符串value最多可以是512M")])]),E._v(" "),B("li",[B("p",[E._v("redis 列表（List）")]),E._v(" "),B("p",[E._v("Redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）")]),E._v(" "),B("p",[E._v("它的底层实际是个双端链表，最多可以包含 2^32 - 1 个元素 (4294967295, 每个列表超过40亿个元素)")])]),E._v(" "),B("li",[B("p",[E._v("redis 哈希表（Hash）")]),E._v(" "),B("p",[E._v("Redis hash 是一个 string 类型的 field（字段） 和 value（值） 的映射表，hash 特别适合用于存储对象。")]),E._v(" "),B("p",[E._v("Redis 中每个 hash 可以存储 2^32 - 1 键值对（40多亿）")])]),E._v(" "),B("li",[B("p",[E._v("redis 集合（Set）")]),E._v(" "),B("p",[E._v("Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据，集合对象的编码可以是 intset 或者 hashtable。")]),E._v(" "),B("p",[E._v("Redis 中Set集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。")]),E._v(" "),B("p",[E._v("集合中最大的成员数为 2^32 - 1 (4294967295, 每个集合可存储40多亿个成员)")])]),E._v(" "),B("li",[B("p",[E._v("redis 有序集合（ZSet）")]),E._v(" "),B("p",[E._v("Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。")]),E._v(" "),B("p",[E._v("不同的是每个元素都会关联一个double类型的分数，redis正是通过分数来为集合中的成员进行从小到大的排序。")]),E._v(" "),B("p",[E._v("zset的成员是唯一的,但分数(score)却可以重复。")]),E._v(" "),B("p",[E._v("zset集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。 集合中最大的成员数为 2^32 - 1")])]),E._v(" "),B("li",[B("p",[E._v("redis 地理空间（GEO）")]),E._v(" "),B("p",[E._v("Redis GEO 主要用于存储地理位置信息，并对存储的信息进行操作，包括")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("添加地理位置的坐标。")])]),E._v(" "),B("li",[B("p",[E._v("获取地理位置的坐标。")])]),E._v(" "),B("li",[B("p",[E._v("计算两个位置之间的距离。")])]),E._v(" "),B("li",[B("p",[E._v("根据用户给定的经纬度坐标来获取指定范围内的地理位置集合")])])])]),E._v(" "),B("li",[B("p",[E._v("redis 基数统计（HyperLogLog）")]),E._v(" "),B("p",[E._v("HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定且是很小的。")]),E._v(" "),B("p",[E._v("在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。")]),E._v(" "),B("p",[E._v("但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。")])]),E._v(" "),B("li",[B("p",[E._v("redis 位图（bitmap）")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/which10/redis%E4%BD%8D%E5%9B%BE.png",alt:""}})]),E._v(" "),B("p",[E._v("由0和1状态表现的二进制位的bit数组")])]),E._v(" "),B("li",[B("p",[E._v("redis 位域（bitfield）")]),E._v(" "),B("p",[E._v("通过bitfield命令可以一次性操作多个比特位域(指的是连续的多个比特位)，它会执行一系列操作并返回一个响应数组，这个数组中的元素对应参数列表中的相应操作的执行结果。")]),E._v(" "),B("p",[E._v("说白了就是通过bitfield命令我们可以一次性对多个比特位域进行操作。")])]),E._v(" "),B("li",[B("p",[E._v("redis 流（Stream）")]),E._v(" "),B("p",[E._v("Redis Stream 是 Redis 5.0 版本新增加的数据结构。")]),E._v(" "),B("p",[E._v("Redis Stream 主要用于消息队列（MQ，Message Queue），Redis 本身是有一个 Redis 发布订阅 (pub/sub) 来实现消息队列的功能，但它有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。")]),E._v(" "),B("p",[E._v("简单来说发布订阅 (pub/sub) 可以分发消息，但无法记录历史消息。")]),E._v(" "),B("p",[E._v("而 Redis Stream 提供了消息的持久化和主备复制功能，可以让任何客户端访问任何时刻的数据，并且能记住每一个客户端的访问位置，还能保证消息不丢失")])])]),E._v(" "),B("h3",{attrs:{id:"_2、如何获得-redis-常见数据类型操作命令"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_2、如何获得-redis-常见数据类型操作命令"}},[E._v("#")]),E._v(" 2、如何获得 Redis 常见数据类型操作命令")]),E._v(" "),B("ul",[B("li",[E._v("官网英文：https://redis.io/commands/")]),E._v(" "),B("li",[E._v("中文：http://www.redis.cn/commands.html")])]),E._v(" "),B("h3",{attrs:{id:"_3、redis-键-key"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_3、redis-键-key"}},[E._v("#")]),E._v(" 3、Redis 键（key）")]),E._v(" "),B("h4",{attrs:{id:"_3-1-常用"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-常用"}},[E._v("#")]),E._v(" 3.1 常用")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/Redis%E9%94%AE/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.png",alt:""}})]),E._v(" "),B("h4",{attrs:{id:"_3-2-案例"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-案例"}},[E._v("#")]),E._v(" 3.2 案例")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("keys *：查看当前库所有的 key")])]),E._v(" "),B("li",[B("p",[E._v("exists key：判断某个 key 是否存在")])]),E._v(" "),B("li",[B("p",[E._v("type key：查看你的 key 是什么类型")])]),E._v(" "),B("li",[B("p",[E._v("del key：删除指定的 key 数据")])]),E._v(" "),B("li",[B("p",[E._v("unlink key：非阻塞删除，仅仅将 keys 从 keyspace 元数据中删除，真正的删除会在后续异步中操作")])]),E._v(" "),B("li",[B("p",[E._v("ttl key：查看还有多少秒过期，-1 表示永不过期，-2 表示已过期")])]),E._v(" "),B("li",[B("p",[E._v("expire key 秒钟：为给定的 key 设置过期时间")]),E._v(" "),B("p",[E._v("设置 Key 过期时间，默认-1表示永不过期，-2表示已过期")]),E._v(" "),B("p",[E._v("Redis 的过期时间设置有四种形式：")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("EXPIRE 秒——设置指定的过期时间(秒)，表示的是时间间隔。")])]),E._v(" "),B("li",[B("p",[E._v("PEXPIRE 毫秒——设置指定的过期时间，以毫秒为单位，表示的是时间间隔。")])]),E._v(" "),B("li",[B("p",[E._v("EXPIREAT 时间戳-秒——设置指定的 Key 过期的 Unix 时间，单位为秒，表示的是时间/时刻。")])]),E._v(" "),B("li",[B("p",[E._v("PEXPIREAT 时间戳-毫秒——设置指定的 Key 到期的 Unix 时间，以毫秒为单位，表示的是时间/时刻。")])])]),E._v(" "),B("p",[E._v("expire key seconds [NX|XX|GT|LT]")])]),E._v(" "),B("li",[B("p",[E._v("move key dbindex【0-15】：将当前数据库的 key 移动到给定的数据库 db 当中")])]),E._v(" "),B("li",[B("p",[E._v("select dbindex：切换数据库【0-15】，默认为0")])]),E._v(" "),B("li",[B("p",[E._v("dbsize：查看当前数据库 key 的数量")])]),E._v(" "),B("li",[B("p",[E._v("flushdb：清空当前库")])]),E._v(" "),B("li",[B("p",[E._v("flushall：通杀全部库")])])]),E._v(" "),B("h3",{attrs:{id:"_4、数据类型命令及落地应用"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4、数据类型命令及落地应用"}},[E._v("#")]),E._v(" 4、数据类型命令及落地应用")]),E._v(" "),B("h4",{attrs:{id:"_4-1-备注"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-备注"}},[E._v("#")]),E._v(" 4.1 备注")]),E._v(" "),B("ol",[B("li",[E._v("命令不区分大小写，而 key 是区分大小写的")]),E._v(" "),B("li",[E._v("帮助命令，help@类型\n"),B("ul",[B("li",[E._v("help @string")]),E._v(" "),B("li",[E._v("help @list")]),E._v(" "),B("li",[E._v("help @hash")]),E._v(" "),B("li",[E._v("help @hyperloglog")]),E._v(" "),B("li",[E._v("......")])])])]),E._v(" "),B("h4",{attrs:{id:"_4-2-redis-字符串-string"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-redis-字符串-string"}},[E._v("#")]),E._v(" 4.2 Redis 字符串（String）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("常用命令")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("值类型")]),E._v(" "),B("p",[E._v("单值单value")])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("最常用")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("set key value")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4set%E5%91%BD%E4%BB%A4.png",alt:""}})]),E._v(" "),B("ul",[B("li",[B("p",[E._v("keepttl")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4set%E5%91%BD%E4%BB%A4keepttl%E5%8F%82%E6%95%B0.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("get key")])])])]),E._v(" "),B("li",[B("p",[E._v("同时设置/获取多个键值")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("MSET key value [key value ......]")])]),E._v(" "),B("li",[B("p",[E._v("MGET key [key ......]")])]),E._v(" "),B("li",[B("p",[E._v("mset/mget/msetnx")]),E._v(" "),B("p",[E._v("mset：同时设置一个或多个 key-value 对。")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4mset.png",alt:""}})]),E._v(" "),B("p",[E._v("mget：获取所有(一个或多个)给定 key 的值。")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4mget.png",alt:""}})]),E._v(" "),B("p",[E._v("msetnx：同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4msetnx.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("获取指定区间范围内的值")]),E._v(" "),B("p",[E._v("getrange：获取指定区间范围内的值，类似between......and的关系，从零到负一表示全部")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4getrange.png",alt:""}})]),E._v(" "),B("p",[E._v("setrange：设置指定区间范围内的值，格式是setrange key值 具体值")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4setrange.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("数值增减")]),E._v(" "),B("ul",[B("li",[E._v("一定是数字才能进行加减")]),E._v(" "),B("li",[E._v("递增数字：INCR key")]),E._v(" "),B("li",[E._v("增加指定的整数：INCRBY key increment")]),E._v(" "),B("li",[E._v("递减数值：DECR key")]),E._v(" "),B("li",[E._v("减少指定的整数：DECRBY key decrement")])])]),E._v(" "),B("li",[B("p",[E._v("获取字符串长度和内容追加")]),E._v(" "),B("ul",[B("li",[E._v("STRLEN key")]),E._v(" "),B("li",[E._v("APPEND key value")])])]),E._v(" "),B("li",[B("p",[E._v("分布式锁")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A1%88%E4%BE%8B%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.png",alt:""}})]),E._v(" "),B("ul",[B("li",[B("p",[E._v("setnx key value")])]),E._v(" "),B("li",[B("p",[E._v("setex（set with expire）键秒值/setnx（set if not exist）")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("setex：设置带过期时间的key，动态设置。setex 键 秒值 真实值")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4setex.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("setnx：只有在 key 不存在时设置 key 的值。")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4setnx.png",alt:""}})])])])])])]),E._v(" "),B("li",[B("p",[E._v("getset")]),E._v(" "),B("p",[E._v("getset：将给定 key 的值设为 value ，并返回 key 的旧值(old value)。")]),E._v(" "),B("p",[E._v("简单一句话，先get然后立即set")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%A1%88%E4%BE%8Bgetset.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("应用场景")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("比如抖音无限点赞某个视频或者商品，点一下加一次")])]),E._v(" "),B("li",[B("p",[E._v("是否喜欢的文章")]),E._v(" "),B("p",[E._v("阅读数：只要点击了rest地址，直接可以使用incr key 命令增加一个数字1，完成记录数字。")])])])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-3-redis-列表-list"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-redis-列表-list"}},[E._v("#")]),E._v(" 4.3 Redis 列表（List）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("常用")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E5%B8%B8%E7%94%A8.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("值类型")]),E._v(" "),B("p",[E._v("单key多value")])]),E._v(" "),B("li",[B("p",[E._v("简单说明")]),E._v(" "),B("p",[E._v("一个双端链表的结构，容量是2的32次方减1个元素，大概40多亿，主要功能有push/pop等，一般用在栈、队列、消息队列等场景。")]),E._v(" "),B("p",[E._v("left、right都可以插入添加；")]),E._v(" "),B("p",[E._v("如果键不存在，创建新的链表；")]),E._v(" "),B("p",[E._v("如果键已存在，新增内容；")]),E._v(" "),B("p",[E._v("如果值全移除，对应的键也就消失了。")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("它的底层实际是个"),B("strong",[E._v("双向链表，对两端的操作性能很高，通过索引下标的操作中间的节点性能会较差。")])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E7%AE%80%E5%8D%95%E8%AF%B4%E6%98%8E.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("lpush/rpush/lrange")])]),E._v(" "),B("li",[B("p",[E._v("lpop/rpop")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Blpoprpop.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("lindex：按照索引下标获得元素（从上到下）")]),E._v(" "),B("p",[E._v("通过索引获取列表中的元素 lindex key index")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Blindex.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("llen：获取列表中元素的个数")])]),E._v(" "),B("li",[B("p",[E._v("lrem key 数字N 给定值v1 解释（删除N个值等于v1的元素）")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("从left往right删除2个值等于v1的元素，返回的值为实际删除的数量")])]),E._v(" "),B("li",[B("p",[E._v("LREM list3 0 值，表示删除全部给定的值。零个就是全部值")])])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Blrem.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("ltrim key 开始index 结束index，截取指定范围的值后再赋值给key")]),E._v(" "),B("p",[E._v("ltrim：截取指定索引区间的元素，格式是ltrim list的key 起始索引 结束索引")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Bltrim.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("rpoplpush 源列表 目的列表")]),E._v(" "),B("p",[E._v("移除列表的最后一个元素，并将该元素添加到另一个列表并返回")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Brpoplpush.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("lset key index value")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Blset.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("linsert key before/after 已有值 插入的新值")]),E._v(" "),B("p",[E._v("在list某个已有值的前后再添加具体值")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%88%97%E8%A1%A8%E6%A1%88%E4%BE%8Blinsert.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("应用场景：微信公众号订阅的信息")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("大V作者李永乐老师和CSDN发布了文章分别是 11 和 22")])]),E._v(" "),B("li",[B("p",[E._v("阳哥关注了他们两个，只要他们发布了新文章，就会安装进我的List")]),E._v(" "),B("p",[E._v("lpush likearticle:阳哥id 11 22")])]),E._v(" "),B("li",[B("p",[E._v("查看阳哥自己的号订阅的全部文章，类似分页，下面0~10就是一次显示10条")]),E._v(" "),B("p",[E._v("lrange likearticle:阳哥id 0 9")])])])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-4-redis-哈希-hash"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-redis-哈希-hash"}},[E._v("#")]),E._v(" 4.4 Redis 哈希（Hash）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("常用")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%93%88%E5%B8%8C/Redis%E5%93%88%E5%B8%8C%E5%B8%B8%E7%94%A8.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("KV模式不变，但V是一个键值对")]),E._v(" "),B("p",[E._v("Map<String, Map<Object, Object>>")])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("hset/hget/hmset/hmget/hgetall/hdel")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%93%88%E5%B8%8C/Redis%E5%93%88%E5%B8%8C%E6%A1%88%E4%BE%8Bhsethget.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%93%88%E5%B8%8C/Redis%E5%93%88%E5%B8%8C%E6%A1%88%E4%BE%8Bhdel.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("hlen：获取某个key内的全部数量")])]),E._v(" "),B("li",[B("p",[E._v("hexists key 在 key 里面的某个值的 key")])]),E._v(" "),B("li",[B("p",[E._v("hkeys/hvals")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%93%88%E5%B8%8C/Redis%E5%93%88%E5%B8%8C%E6%A1%88%E4%BE%8Bhkeyshvals.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("hincrby/hincrbyfloat")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%93%88%E5%B8%8C/Redis%E5%93%88%E5%B8%8C%E6%A1%88%E4%BE%8Bhincrby.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("hsetnx")]),E._v(" "),B("p",[E._v("不存在赋值，存在了无效。")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%93%88%E5%B8%8C/Redis%E5%93%88%E5%B8%8C%E6%A1%88%E4%BE%8Bhsetnx.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("应用场景")]),E._v(" "),B("p",[E._v("JD购物车早期，设计目前不再采用，当前小中厂可用")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("新增商品 → hset shopcar:uid1024 334488 1")])]),E._v(" "),B("li",[B("p",[E._v("新增商品 → hset shopcar:uid1024 334477 1")])]),E._v(" "),B("li",[B("p",[E._v("增加商品数量 → hincrby shopcar:uid1024 334477 1")])]),E._v(" "),B("li",[B("p",[E._v("商品总数 → hlen shopcar:uid1024")])]),E._v(" "),B("li",[B("p",[E._v("全部选择 → hgetall shopcar:uid1024")])])])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-5-redis-集合-set"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-redis-集合-set"}},[E._v("#")]),E._v(" 4.5 Redis 集合（Set）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("常用")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E5%B8%B8%E7%94%A8.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("值类型")]),E._v(" "),B("p",[E._v("单值多value，且无重复")])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("SADD key member [member...]：添加元素")])]),E._v(" "),B("li",[B("p",[E._v("SMEMBERS key：遍历集合中的所有元素")])]),E._v(" "),B("li",[B("p",[E._v("SISMEMBER key member：判断元素是否在集合中")])]),E._v(" "),B("li",[B("p",[E._v("SREM key member [member...]：删除元素")])]),E._v(" "),B("li",[B("p",[E._v("scard：获取集合里面的元素个数")]),E._v(" "),B("p",[E._v("获取集合里面的元素个数")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bscard.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("SRANDMEMBER key [数字]：从集合中随机展现设置的数字个数元素，元素不删除")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("从set集合里面随机取出2个")])]),E._v(" "),B("li",[B("p",[E._v("如果超过最大数量就全部取出，")])]),E._v(" "),B("li",[B("p",[E._v("如果写的值是负数，比如-3 ，表示需要取出3个，但是可能会有重复值。")])])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bsrandmember.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("SPOP key [数字]：从集合中随机弹出一个元素，出一个删一个")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bspop.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("smove key1 key2 在 key1 里已存在的某个值：将 key1 里已存在的某个值赋给 key2")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bsmove.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("集合运算")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("A、B")]),E._v(" "),B("ul",[B("li",[E._v("A：abc12")]),E._v(" "),B("li",[E._v("B：123ax")])])]),E._v(" "),B("li",[B("p",[E._v("集合的差集运算 A-B")]),E._v(" "),B("ul",[B("li",[E._v("属于 A 但不属于 B 的元素构成的集合")]),E._v(" "),B("li",[E._v("SDIFF key [key...]")])])]),E._v(" "),B("li",[B("p",[E._v("集合的并集运算 AUB")]),E._v(" "),B("ul",[B("li",[E._v("属于 A 或者属于 B 的元素合并后的集合")]),E._v(" "),B("li",[E._v("SUNION key [key ...]")])])]),E._v(" "),B("li",[B("p",[E._v("集合的交集运算 A∩B")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("属于 A 同时也属于 B 的共同拥有的元素构成的集合")])]),E._v(" "),B("li",[B("p",[E._v("SINTER key [key...]")])]),E._v(" "),B("li",[B("p",[E._v("SINTERCARD numkeys key [key...] [LIMIT limit]")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("redis7 新命令")])]),E._v(" "),B("li",[B("p",[E._v("它不返回结果集，而只返回结果的基数。返回由所有给定集合的交集产生的集合的基数")])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8B%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97%E6%A1%88%E4%BE%8B.png",alt:""}})])])])])])])])]),E._v(" "),B("li",[B("p",[E._v("应用场景")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("微信抽奖小程序")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("功能")]),E._v(" "),B("th",[E._v("代码")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("1 用户ID，立即参与按钮")]),E._v(" "),B("td",[E._v("sadd key 用户ID")])]),E._v(" "),B("tr",[B("td",[E._v("2 显示已经有多少人参与了，上图23208人参加")]),E._v(" "),B("td",[E._v("SCARD key")])]),E._v(" "),B("tr",[B("td",[E._v("3 抽奖(从set中任意选取N个中奖人)")]),E._v(" "),B("td",[E._v("SRANDMEMBER key 2    随机抽奖2个人，元素不删除SPOP key 3             随机抽奖3个人，元素会删除")])])])])]),E._v(" "),B("li",[B("p",[E._v("微信朋友圈点赞查看赞朋友")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("功能")]),E._v(" "),B("th",[E._v("代码")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("1 新增点赞")]),E._v(" "),B("td",[E._v("sadd pub:msgID 点赞用户ID1 点赞用户ID2")])]),E._v(" "),B("tr",[B("td",[E._v("2 取消点赞")]),E._v(" "),B("td",[E._v("srem pub:msgID 点赞用户ID")])]),E._v(" "),B("tr",[B("td",[E._v("3 展现所有点赞过的用户")]),E._v(" "),B("td",[E._v("SMEMBERS pub:msgID")])]),E._v(" "),B("tr",[B("td",[E._v("4 点赞用户数统计，就是常见的点赞红色数字")]),E._v(" "),B("td",[E._v("scard pub:msgID")])]),E._v(" "),B("tr",[B("td",[E._v("5 判断某个朋友是否对楼主点赞过")]),E._v(" "),B("td",[E._v("SISMEMBER pub:msgID 用户ID")])])])])]),E._v(" "),B("li",[B("p",[E._v("QQ内推可能认识的人")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E9%9B%86%E5%90%88Set/Redis%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AFQQ%E5%8F%AF%E8%83%BD%E8%AE%A4%E8%AF%86%E7%9A%84%E4%BA%BA.png",alt:""}})])])])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-6-redis-有序集合-sorted-set"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-redis-有序集合-sorted-set"}},[E._v("#")]),E._v(" 4.6 Redis 有序集合（sorted set）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("多说一句")]),E._v(" "),B("p",[E._v("在 set 基础上，每个 val 值前加一个 score 分数值。之前 set 是 k1 v1 v2 v3，现在 zset 是 k1 score v1 score2 v2")])]),E._v(" "),B("li",[B("p",[E._v("常用")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E5%B8%B8%E7%94%A8.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("向有序集合中加入一个元素和该元素的分数")])]),E._v(" "),B("li",[B("p",[E._v("ZADD key score member [score member...]：添加元素")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzadd.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("ZRANGE key start stop [WITHSCORES]：按照元素分数从小到大的顺序，返回索引从 start 到 stop 之间的所有元素")])]),E._v(" "),B("li",[B("p",[E._v("zrevrange")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzrevrange.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("ZRANGEBYSCORE key min max [WITHSCORES][LIMIT offset count]：获取指定分数范围的元素")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzrangebyscore.png",alt:""}})]),E._v(" "),B("ul",[B("li",[E._v("withscores")]),E._v(" "),B("li",[E._v("（不包含")]),E._v(" "),B("li",[E._v("limit 作用是返回限制：limit 开始下标步，多少步")])])]),E._v(" "),B("li",[B("p",[E._v("ZSCORE key member：获取元素的分数")]),E._v(" "),B("p",[E._v("zscore：按照值获得对应的分数")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzscore.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("ZCARD key：获取集合中元素的数量")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzcard.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("zrem key 某 score 下对应的 value 值，作用是删除元素")]),E._v(" "),B("p",[E._v("删除元素，格式是zrem zset的key 项的值，项的值可以是多个")]),E._v(" "),B("p",[E._v("zrem key score某个对应值，可以是多个值")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzrem.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("ZINCRBY key increment member：增加某个元素的分数")])]),E._v(" "),B("li",[B("p",[E._v("ZCOUNT key min max：获取指定分数范围内的元素个数")]),E._v(" "),B("p",[E._v("zcount ：获取分数区间内元素个数，zcount key 开始分数区间 结束分数区间")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzcount.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("ZMPOP：从键名列表中的第一个非空排序集中弹出一个或多个元素，它们是成员分数对")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzmpop.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("zrank key values 值，作用是获得下标值")]),E._v(" "),B("p",[E._v("zrank： 获取value在zset中的下标位置")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzrank.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("zrevrank key values 值，作用是逆序获得下标值")]),E._v(" "),B("p",[E._v("正序、逆序获得下标索引值")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8Bzrevrank.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("应用场景：根据商品销售对商品进行排序显示")]),E._v(" "),B("p",[E._v("思路：定义商品销售排行榜(sorted set集合)，key为goods:sellsort，分数为商品销售数量。")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("功能")]),E._v(" "),B("th",[E._v("代码")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("商品编号1001的销量是9，商品编号1002的销量是15")]),E._v(" "),B("td",[E._v("zadd goods:sellsort 9 1001 15 1002")])]),E._v(" "),B("tr",[B("td",[E._v("有一个客户又买了2件商品1001，商品编号1001销量加2")]),E._v(" "),B("td",[E._v("zincrby goods:sellsort 2 1001")])]),E._v(" "),B("tr",[B("td",[E._v("求商品销量前10名")]),E._v(" "),B("td",[E._v("ZRANGE goods:sellsort 0 9 withscores")])])])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88Zset/Redis%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%E6%A1%88%E4%BE%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%95%86%E5%93%81%E6%8E%92%E5%BA%8F%E6%98%BE%E7%A4%BA.png",alt:""}})])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-7-redis-位图-bitmap"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-redis-位图-bitmap"}},[E._v("#")]),E._v(" 4.7 Redis 位图（bitmap）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("一句话")]),E._v(" "),B("p",[E._v("由 0 和 1 状态表现的二进制位的 bit 数组")])]),E._v(" "),B("li",[B("p",[E._v("看需求")]),E._v(" "),B("ul",[B("li",[E._v("用户是否登陆过Y、N，比如京东每日签到送京豆")]),E._v(" "),B("li",[E._v("电影、广告是否被点击播放过")]),E._v(" "),B("li",[E._v("钉钉打卡上下班，签到统计")])])]),E._v(" "),B("li",[B("p",[E._v("是什么")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E6%98%AF%E4%BB%80%E4%B9%88.png",alt:""}})]),E._v(" "),B("p",[E._v("说明：用String类型作为底层数据结构实现的一种统计二值状态的数据类型")]),E._v(" "),B("p",[E._v("位图本质是数组，它是基于String数据类型的按位的操作。该数组由多个二进制位组成，每个二进制位都对应一个偏移量(我们称之为一个索引)。")]),E._v(" "),B("p",[E._v("Bitmap支持的最大位数是2^32位，它可以极大的节约存储空间，使用512M内存就可以存储多达42.9亿的字节信息(2^32 = 4294967296)")])]),E._v(" "),B("li",[B("p",[E._v("能干嘛")]),E._v(" "),B("p",[E._v("用于状态统计：Y、N，类似于AtomicBoolean")])]),E._v(" "),B("li",[B("p",[E._v("基本命令")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4.png",alt:""}})]),E._v(" "),B("ol",[B("li",[B("p",[E._v("setbit：")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("setbit key offset value")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4setbit.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("setbit 键的偏移位只能为零或者1")])]),E._v(" "),B("li",[B("p",[E._v("Bitmap的偏移量是从零开始算的")])])])]),E._v(" "),B("li",[B("p",[E._v("getbit：")]),E._v(" "),B("p",[E._v("getbit key offset")])]),E._v(" "),B("li",[B("p",[E._v("strlen：")]),E._v(" "),B("p",[E._v("统计字节数占用多少")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4strlen.png",alt:""}})]),E._v(" "),B("p",[E._v("不是字符串长度而是占据几个字节，超过8位后自己按照8位一组一byte再扩容")])]),E._v(" "),B("li",[B("p",[E._v("bitcount：")]),E._v(" "),B("p",[E._v("全部键里面含有1的有多少个")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4bitcount.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("bitop：")]),E._v(" "),B("p",[E._v("连续2天都签到的用户")]),E._v(" "),B("p",[E._v("加入某个网站或者系统，它的用户有1000W，做个用户id和位置的映射")]),E._v(" "),B("p",[E._v("比如0号位对应用户id：uid-092iok-lkj")]),E._v(" "),B("p",[E._v("比如1号位对应用户id：uid-7388c-xxx")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4bitop.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("setbit 和 getbit 案例说明：")]),E._v(" "),B("p",[E._v("按照天")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4setbit%E5%92%8Cgetbit%E6%A1%88%E4%BE%8B%E8%AF%B4%E6%98%8E1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4setbit%E5%92%8Cgetbit%E6%A1%88%E4%BE%8B%E8%AF%B4%E6%98%8E2.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("应用场景")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("一年 365 天，全年天天登录占用多少字节")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9B%BEbitmap/Redis%E4%BD%8D%E5%9B%BE%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B8%80%E5%B9%B4%E7%99%BB%E5%BD%95%E5%8D%A0%E7%94%A8.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("按照年")]),E._v(" "),B("p",[E._v("按年去存储一个用户的签到情况，365 天只需要 365 / 8 ≈ 46 Byte，1000W 用户量一年也只需要 44 MB 就足够了。")]),E._v(" "),B("p",[E._v("假如是亿级的系统，每天使用1个1亿位的Bitmap约占12MB的内存（10^8/8/1024/1024），10天的Bitmap的内存开销约为120MB，内存压力不算太高。")]),E._v(" "),B("p",[E._v("此外，在实际使用时，最好对Bitmap设置过期时间，让Redis自动删除不再需要的签到记录以节省内存开销。")])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-8-redis-基数统计-hyperloglog"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-redis-基数统计-hyperloglog"}},[E._v("#")]),E._v(" 4.8 Redis 基数统计（HyperLogLog）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("看需求")]),E._v(" "),B("ol",[B("li",[E._v("统计某个网站的UV，统计某个文章的UV")]),E._v(" "),B("li",[E._v("什么是UV\n"),B("ul",[B("li",[E._v("Unique Visitor，独立访客，一般理解为客户端IP")]),E._v(" "),B("li",[E._v("需要去重考虑")])])]),E._v(" "),B("li",[E._v("用户搜索网站关键词的数量")]),E._v(" "),B("li",[E._v("统计用户每天搜索不同词条个数")])])]),E._v(" "),B("li",[B("p",[E._v("是什么")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("去重复统计功能的基数估计算法，就是HyperLogLog")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1HyperLogLog/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1%E6%98%AF%E4%BB%80%E4%B9%88%E5%8E%BB%E9%87%8D.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("基数")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("是一种数据集，去重复后的真实个数")])]),E._v(" "),B("li",[B("p",[E._v("案例Case")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1HyperLogLog/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1%E6%98%AF%E4%BB%80%E4%B9%88%E5%9F%BA%E6%95%B0%E6%A1%88%E4%BE%8B.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("基数统计：用于统计一个集合中不重复的元素个数，就是对集合去重复后剩余元素的计算")])]),E._v(" "),B("li",[B("p",[E._v("一句话：去重脱水后的真实数据")])])])]),E._v(" "),B("li",[B("p",[E._v("基本命令")]),E._v(" "),B("p",[E._v("案例见最下：")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1HyperLogLog/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A41.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1HyperLogLog/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A42.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1HyperLogLog/Redis%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A43.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("应用场景")]),E._v(" "),B("p",[E._v("编码实战案例见高级篇：天猫网站首页亿级UV的 Redis 统计方案")])])]),E._v(" "),B("h4",{attrs:{id:"_4-9-redis-地理空间-geo"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-redis-地理空间-geo"}},[E._v("#")]),E._v(" 4.9 Redis 地理空间（GEO）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("简介")]),E._v(" "),B("p",[E._v("移动互联网时代LBS应用越来越多，交友软件中附近的小姐姐、外卖软件中附近的美食店铺、高德地图附近的核酸检查点等等，那这种附近各种形形色色的XXX地址位置选择是如何实现的？")]),E._v(" "),B("p",[E._v("地球上的地理位置是使用二维的经纬度表示，经度范围 (-180, 180]，纬度范围 (-90, 90]，只要我们确定一个点的经纬度就可以名取得他在地球的位置。")]),E._v(" "),B("p",[E._v("例如滴滴打车，最直观的操作就是实时记录更新各个车的位置，然后当我们要找车时，在数据库中查找距离我们(坐标x0,y0)附近r公里范围内部的车辆")]),E._v(" "),B("p",[E._v("使用如下SQL即可：")]),E._v(" "),B("p",[E._v("select taxi from position where x0-r < x < x0 + r and y0-r < y < y0+r")]),E._v(" "),B("p",[E._v("但是这样会有什么问题呢？")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("查询性能问题，如果并发高，数据量大这种查询是要搞垮数据库的")])]),E._v(" "),B("li",[B("p",[E._v("这个查询的是一个矩形访问，而不是以我为中心r公里为半径的圆形访问。")])]),E._v(" "),B("li",[B("p",[E._v("精准度的问题，我们知道地球不是平面坐标系，而是一个圆球，这种矩形计算在长距离计算时会有很大误差")])])])]),E._v(" "),B("li",[B("p",[E._v("原理")]),E._v(" "),B("ul",[B("li",[E._v("地理知识说明：https://baike.baidu.com/item/%E7%BB%8F%E7%BAR%6AC%E7%BA%BF/5596978?fr=aladdin")])]),E._v(" "),B("p",[E._v("核心思想就是将球体转换为平面，区块转换为一点")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%8E%9F%E7%90%861.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%8E%9F%E7%90%862.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("Redis 在3.2版本以后增加了地理位置的处理")])]),E._v(" "),B("li",[B("p",[E._v("命令")]),E._v(" "),B("ol",[B("li",[E._v("GEOADD：多个经度（longitude）、纬度（latitude）、位置名称（member）添加到指定的 key 中")]),E._v(" "),B("li",[E._v("GEOPOS：从键里面返回所有给定位置元素的位置（经度和纬度）")]),E._v(" "),B("li",[E._v("GEODIST：返回两个给定位置之间的距离")]),E._v(" "),B("li",[E._v("GEORADIUS：以给定的经纬度为中心，返回与中心的距离不超过给定最大距离的所有位置元素")]),E._v(" "),B("li",[E._v("GEORADIUSBYMEMBER 跟 GEORADIUS 类似")]),E._v(" "),B("li",[E._v("GEOHASH 返回一个或多个位置元素的 Geohash 表示")])])]),E._v(" "),B("li",[B("p",[E._v("命令实操")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("如何获得某个地址的经纬度：http://api.map.baidu.com/lbsapi/getpoint/")])]),E._v(" "),B("li",[B("p",[E._v("GEOADD 添加经纬度坐标")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E6%B7%BB%E5%8A%A0%E7%BB%8F%E7%BA%AC%E5%BA%A6%E5%9D%90%E6%A0%871.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E6%B7%BB%E5%8A%A0%E7%BB%8F%E7%BA%AC%E5%BA%A6%E5%9D%90%E6%A0%872.png",alt:""}})]),E._v(" "),B("p",[E._v("命令如下：")]),E._v(" "),B("div",{staticClass:"language-redis extra-class"},[B("pre",{pre:!0,attrs:{class:"language-text"}},[B("code",[E._v('GEOADD city 116.403963 39.915119 "天安门" 116.403414 39.924091 "故宫" 116.024067 40.362639 "长城"\n')])])]),B("ul",[B("li",[E._v("中文乱码如何处理")])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E6%B7%BB%E5%8A%A0%E7%BB%8F%E7%BA%AC%E5%BA%A6%E5%9D%90%E6%A0%87%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("GEOPOS 返回经纬度")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E8%BF%94%E5%9B%9E%E7%BB%8F%E7%BA%AC%E5%BA%A61.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E8%BF%94%E5%9B%9E%E7%BB%8F%E7%BA%AC%E5%BA%A62.png",alt:""}})]),E._v(" "),B("div",{staticClass:"language-redis extra-class"},[B("pre",{pre:!0,attrs:{class:"language-text"}},[B("code",[E._v("GEOPOS city 天安门 故宫 长城\n")])])])]),E._v(" "),B("li",[B("p",[E._v("GEOHASH 返回坐标的 geohash 表示")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E8%BF%94%E5%9B%9E%E5%9D%90%E6%A0%87%E7%9A%84geohash%E8%A1%A8%E7%A4%BA1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E8%BF%94%E5%9B%9E%E5%9D%90%E6%A0%87%E7%9A%84geohash%E8%A1%A8%E7%A4%BA2.png",alt:""}})]),E._v(" "),B("ul",[B("li",[B("p",[E._v("geohash 算法生成的 base32 编码值")])]),E._v(" "),B("li",[B("p",[E._v("3维变2维变1维")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E8%BF%94%E5%9B%9E%E5%9D%90%E6%A0%87%E7%9A%84geohash%E8%A1%A8%E7%A4%BA%E4%B8%89%E7%BB%B4%E5%8F%98%E4%BA%8C%E7%BB%B4%E5%90%A7%E5%8F%98%E4%B8%80%E7%BB%B4.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("GEODIST 两个位置之间距离")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E4%B8%A4%E4%B8%AA%E4%BD%8D%E7%BD%AE%E4%B9%8B%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8D%E4%B8%A4%E4%B8%AA%E4%BD%8D%E7%BD%AE%E4%B9%8B%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB2.png",alt:""}})]),E._v(" "),B("p",[E._v("GEODIST city 天安门 故宫 km")]),E._v(" "),B("blockquote",[B("p",[E._v("后面参数是距离单位：")]),E._v(" "),B("p",[E._v("m 米")]),E._v(" "),B("p",[E._v("km 千米")]),E._v(" "),B("p",[E._v("ft 英尺")]),E._v(" "),B("p",[E._v("mi 英里")])])]),E._v(" "),B("li",[B("p",[E._v("GEORADIUS")]),E._v(" "),B("p",[E._v("以半径为中心，查找附近的XXX")]),E._v(" "),B("p",[E._v("georadius 以给定的经纬度为中心， 返回键包含的位置元素当中， 与中心的距离不超过给定最大距离的所有位置元素。")]),E._v(" "),B("div",{staticClass:"language-redis extra-class"},[B("pre",{pre:!0,attrs:{class:"language-text"}},[B("code",[E._v("GEORADIUS city 116.418017 39.914402 10 km withdist withcoord count 10 withhash desc\nGEORADIUS city 116.418017 39.914402 10 km withdist withcoord withhash count 10 desc\n")])])]),B("blockquote",[B("p",[E._v("WITHDIST: 在返回位置元素的同时， 将位置元素与中心之间的距离也一并返回。 距离的单位和用户给定的范围单位保持一致。")]),E._v(" "),B("p",[E._v("WITHCOORD: 将位置元素的经度和维度也一并返回。")]),E._v(" "),B("p",[E._v("WITHHASH: 以 52 位有符号整数的形式， 返回位置元素经过原始 geohash 编码的有序集合分值。 这个选项主要用于底层应用或者调试， 实际中的作用并不大")]),E._v(" "),B("p",[E._v("COUNT 限定返回的记录数。")])]),E._v(" "),B("p",[E._v("当前位置(116.418017 39.914402),阳哥在北京王府井")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8DGEORADIUS%E5%8D%8A%E5%BE%84%E6%9F%A5%E6%89%BE.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("GEORADIUSBYMEMBER")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8DGEORADIUSBYMEMBER1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E5%9C%B0%E9%87%8C%E7%A9%BA%E9%97%B4GEO/Redis%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4%E5%AE%9E%E6%93%8DGEORADIUSBYMEMBER2.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("应用场景")]),E._v(" "),B("ul",[B("li",[E._v("美团地图位置附近的酒店推送")]),E._v(" "),B("li",[E._v("高德地图附近的核酸检查点")])])])]),E._v(" "),B("h4",{attrs:{id:"_4-10-redis-流-stream"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-10-redis-流-stream"}},[E._v("#")]),E._v(" 4.10 Redis 流（Stream）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("是什么")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("redis5.0 之前的痛点")]),E._v(" "),B("p",[E._v("Redis 消息队列的2种方案")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("List 实现消息队列")]),E._v(" "),B("p",[E._v("按照插入顺序排序，你可以添加一个元素到列表的头部（左边）或者尾部（右边）。")]),E._v(" "),B("p",[E._v("所以常用来做异步队列使用，将需要延后处理的任务结构体序列化成字符串塞进 Redis 的列表，另一个线程从这个列表中轮询数据进行处理。")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E6%98%AF%E4%BB%80%E4%B9%88%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97List%E5%AE%9E%E7%8E%B01.png",alt:""}})]),E._v(" "),B("p",[E._v("LPUSH、RPOP 左进右出  RPUSH、LPOP 右进左出")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E6%98%AF%E4%BB%80%E4%B9%88%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97List%E5%AE%9E%E7%8E%B02.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("List 实现方式其实就是点对点的模式")])])]),E._v(" "),B("li",[B("p",[E._v("Pub/Sub")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E6%98%AF%E4%BB%80%E4%B9%88%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97PubSub.png",alt:""}})]),E._v(" "),B("p",[E._v("Redis 发布订阅 (pub/sub) 有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。而且也没有 Ack 机制来保证数据的可靠性，假设一个消费者都没有，那消息就直接被丢弃了。")])])])]),E._v(" "),B("li",[B("p",[E._v("redis5.0 版本新增了一个更强大的数据结构-------Stream")])]),E._v(" "),B("li",[B("p",[E._v("一句话")]),E._v(" "),B("p",[E._v("Redis 版的 MQ 消息中间件 + 阻塞队列")])])])]),E._v(" "),B("li",[B("p",[E._v("能干嘛")]),E._v(" "),B("p",[E._v("实现消息队列，它支持消息的持久化、支持自动生成全局唯一ID、支持ack 确认消息的模式、支持消费组模式等，让消息队列更加的稳定和可靠")])]),E._v(" "),B("li",[B("p",[E._v("底层结构和原理说明")]),E._v(" "),B("p",[E._v("Stream 结构")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%BA%95%E5%B1%82%E7%BB%93%E6%9E%84%E5%92%8C%E5%8E%9F%E7%90%86%E8%AF%B4%E6%98%8Estream%E7%BB%93%E6%9E%84.png",alt:""}})]),E._v(" "),B("p",[E._v("一个消息链表，将所有加入的消息都串起来，每个消息都有一个唯一的 ID 和对应的内容")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("编号")]),E._v(" "),B("th",[E._v("代码")]),E._v(" "),B("th",[E._v("功能介绍")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("1")]),E._v(" "),B("td",[E._v("Message Content")]),E._v(" "),B("td",[E._v("消息内容")])]),E._v(" "),B("tr",[B("td",[E._v("2")]),E._v(" "),B("td",[E._v("Consumer group")]),E._v(" "),B("td",[E._v("消费组，通过XGROUP CREATE 命令创建，同一个消费组可以有多个消费者")])]),E._v(" "),B("tr",[B("td",[E._v("3")]),E._v(" "),B("td",[E._v("Last_delivered_id")]),E._v(" "),B("td",[E._v("游标，每个消费组会有个游标 last_delivered_id，任意一个消费者读取了消息都会使游标 last_delivered_id 往前移动。")])]),E._v(" "),B("tr",[B("td",[E._v("4")]),E._v(" "),B("td",[E._v("Consumer")]),E._v(" "),B("td",[E._v("消费者，消费组中的消费者")])]),E._v(" "),B("tr",[B("td",[E._v("5")]),E._v(" "),B("td",[E._v("Pending_ids")]),E._v(" "),B("td",[E._v("消费者会有一个状态变量，用于记录被当前消费已读取但未ack的消息Id，如果客户端没有ack，这个变量里面的消息ID会越来越多，一旦某个消息被ack它就开始减少。这个pending_ids变量在Redis官方被称之为 PEL(Pending Entries List)，记录了当前已经被客户端读取的消息，但是还没有 ack (Acknowledge character：确认字符），它用来确保客户端至少消费了消息一次，而不会在网络传输的中途丢失了没处理")])])])])]),E._v(" "),B("li",[B("p",[E._v("基本命令理论简介")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("队列相关指令")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E7%90%86%E8%AE%BA%E7%AE%80%E4%BB%8B%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E6%8C%87%E4%BB%A4.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("消费组相关指令")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E7%90%86%E8%AE%BA%E7%AE%80%E4%BB%8B%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E6%8C%87%E4%BB%A4.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("四个特殊符号")]),E._v(" "),B("ul",[B("li",[E._v("- +：最小和最大可能出现的id")]),E._v(" "),B("li",[E._v("$：$ 表示只消费新的消息，当前流中最大的id，可用于将要来的消息")]),E._v(" "),B("li",[E._v(">：用于 XREADGROUP 命令，表示迄今为止还没有发送给组中使用者的消息，会更新消费组的最后 ID")]),E._v(" "),B("li",[E._v("*：用于 XADD 命令中，让系统自动生成 id")])])])])]),E._v(" "),B("li",[B("p",[E._v("基本命令代码实操")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("队列相关指令")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("XADD")]),E._v(" "),B("p",[E._v("添加消息到队列末尾：")]),E._v(" "),B("p",[E._v("XADD 用于向Stream 队列中添加消息，如果指定的Stream 队列不存在，则该命令执行时会新建一个Stream 队列")]),E._v(" "),B("blockquote",[B("p",[E._v("* 号表示服务器自动生成 MessageID(类似mysql里面主键auto_increment)，后面顺序跟着一堆 业务key/value")])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XADD%E6%B7%BB%E5%8A%A0%E6%B6%88%E6%81%AF%E5%88%B0%E9%98%9F%E5%88%97%E6%9C%AB%E5%B0%BE.png",alt:""}})]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("说明")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("信息条目指的是序列号，在相同的毫秒下序列号从0开始递增，序列号是64位长度，理论上在同一毫秒内生成的数据量无法到达这个级别，因此不用担心序列号会不够用。millisecondsTime指的是Redis节点服务器的本地时间，如果存在当前的毫秒时间戳比以前已经存在的数据的时间戳小的话（本地时间钟后跳），那么系统将会采用以前相同的毫秒创建新的ID，也即redis 在增加信息条目时会检查当前 id 与上一条目的 id， 自动纠正错误的情况，一定要保证后面的 id 比前面大，一个流中信息条目的ID必须是单调增的，这是流的基础。")])]),E._v(" "),B("tr",[B("td",[E._v("客户端显示传入规则:Redis对于ID有强制要求，格式必须是时间戳-自增Id这样的方式，且后续ID不能小于前一个ID")])]),E._v(" "),B("tr",[B("td",[E._v("Stream的消息内容，也就是图中的Message Content它的结构类似Hash结构，以key-value的形式存在。")])])])]),E._v(" "),B("ul",[B("li",[B("p",[E._v("消息 ID 必须要比上个 ID 大")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XADD%E6%B6%88%E6%81%AFID%E5%BF%85%E9%A1%BB%E6%AF%94%E4%B8%8A%E4%B8%AA%E5%A4%A7.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("默认使用星号表示自动生成规矩")])]),E._v(" "),B("li",[B("p",[E._v("*：用于 XADD 命令中，让系统自动生成 id")])])])]),E._v(" "),B("li",[B("p",[E._v("XRANGE")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XRANGE.png",alt:""}})]),E._v(" "),B("ul",[B("li",[E._v("用于获取消息列表（可以指定范围），忽略删除的消息")]),E._v(" "),B("li",[E._v("start 表示开始值，- 代表最小值")]),E._v(" "),B("li",[E._v("end 表示结束值，+ 代表最大值")]),E._v(" "),B("li",[E._v("count 表示最多获取多少个值")])])]),E._v(" "),B("li",[B("p",[E._v("XREVRANGE")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREVRANGE.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("与 XRANGE 的区别在于，获取消息列表元素的方向是相反的，end 在前，start 在后")])])]),E._v(" "),B("li",[B("p",[E._v("XDEL")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XDEL.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("XLEN")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XLEN.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("用于获取 Stream 队列的消息的长度")])])]),E._v(" "),B("li",[B("p",[E._v("XTRIM")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("用于对 Stream 的长度进行截取，如超长会进行截取")])]),E._v(" "),B("li",[B("p",[E._v("MAXLEN")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XTRIM%E4%B8%ADMAXLEN.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("允许的最大长度，对流进行修剪限制长度")])])]),E._v(" "),B("li",[B("p",[E._v("MINID")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XTRIM%E4%B8%ADMINID.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("允许的最小 id，从某个 id 值开始比该 id 值小的将会被抛弃")])])])])]),E._v(" "),B("li",[B("p",[E._v("XREAD")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("用于获取消息（阻塞/非阻塞），只会返回大于指定 ID 的消息")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREAD%E4%BD%9C%E7%94%A8.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("非阻塞")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("说明")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("$代表特殊ID，表示以当前Stream已经存储的最大的ID作为最后一个ID，当前Stream中不存在大于当前最大ID的消息，因此此时返回nil")])]),E._v(" "),B("tr",[B("td",[E._v("0-0代表从最小的ID开始获取Stream中的消息，当不指定count，将会返回Stream中的所有消息，注意也可以使用0（00/000也都是可以的……）")])])])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREAD%E9%9D%9E%E9%98%BB%E5%A1%9E.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("阻塞")]),E._v(" "),B("p",[E._v("请redis-cli启动第2个客户端连接上来")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREAD%E9%98%BB%E5%A1%9E.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("小总结（类似 java 里面的阻塞队列）")]),E._v(" "),B("p",[E._v("Stream的基础方法，使用xadd存入消息和xread循环阻塞读取消息的方式可以实现简易版的消息队列，交互流程如下")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREAD%E5%B0%8F%E6%80%BB%E7%BB%931.png",alt:""}})]),E._v(" "),B("p",[E._v("对比List结构")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E9%98%9F%E5%88%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREAD%E5%B0%8F%E6%80%BB%E7%BB%932.png",alt:""}})])])])])])]),E._v(" "),B("li",[B("p",[E._v("消费组相关指令")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("XGROUP CREATE")]),E._v(" "),B("p",[E._v("用于创建消费组组")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XGROUPCREATE.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("$表示从Stream尾部开始消费")]),E._v(" "),B("p",[E._v("0表示从Stream头部开始消费")]),E._v(" "),B("p",[E._v("创建消费者组的时候必须指定 ID, ID 为 0 表示从头开始消费，为 $ 表示只消费新的消息，队尾新来")])])]),E._v(" "),B("li",[B("p",[E._v("XREADGROUP GROUP")]),E._v(" "),B("ul",[B("li",[B("p",[E._v('">"，表示从第一条尚未被消费的信息开始读取')])]),E._v(" "),B("li",[B("p",[E._v("消费组 groupA 内的消费者 consumer1 从 mystream 消息队列中读取所有消息")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREADGROUP%E8%AF%BB%E5%8F%96%E6%89%80%E6%9C%89%E4%BF%A1%E6%81%AF.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("但是，不同消费组的消费组可以消费同一条消息")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREADGROUP%E4%B8%8D%E5%90%8C%E6%B6%88%E8%B4%B9%E7%BB%84%E6%B6%88%E8%B4%B9%E5%90%8C%E4%B8%80%E6%9D%A1%E4%BF%A1%E6%81%AF.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("消费组的目的？")]),E._v(" "),B("p",[E._v("让组内的多个消费者共同分担读取消息，所以，我们通常会让每个消费者读取部分消息，从而实现消息读取负载在多个消费者间是均衡分布的")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XREADGROUP%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9A%84%E7%9B%AE%E7%9A%84.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("重点问题")]),E._v(" "),B("table",[B("thead",[B("tr",[B("th",[E._v("1问题")]),E._v(" "),B("th",[E._v("基于 Stream 实现的消息队列，如何保证消费者在发生故障或宕机再次重启后，仍然可以读取未处理完的消息？")])])]),E._v(" "),B("tbody",[B("tr",[B("td",[E._v("2")]),E._v(" "),B("td",[E._v("Streams 会自动使用内部队列（也称为 PENDING List）留存消费组里每个消费者读取的消息保底措施，直到消费者使用 XACK 命令通知 Streams“消息已经处理完成”。")])]),E._v(" "),B("tr",[B("td",[E._v("3")]),E._v(" "),B("td",[E._v("消费确认增加了消息的可靠性，一般在业务处理完成之后，需要执行 XACK 命令确认消息已经被消费完成")])])])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E9%87%8D%E7%82%B9%E9%97%AE%E9%A2%98.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("XPENDING")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("查询每个消费组内所有消费者「已读取，但尚未确认」的消息")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XPENDING%E6%9F%A5%E8%AF%A2%E5%B7%B2%E8%AF%BB%E5%8F%96%E4%BD%86%E5%B0%9A%E6%9C%AA%E7%A1%AE%E8%AE%A4.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("查看某个消费者具体读取了哪些数据")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XPENDING%E6%9F%A5%E7%9C%8B%E6%B6%88%E8%B4%B9%E7%BB%84%E5%85%B7%E4%BD%93%E8%AF%BB%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE1.png",alt:""}})]),E._v(" "),B("p",[E._v("下面抓图所示：consumer2已读取的消息的 ID是1659430293537-0一旦消息1659430293537-0被consumer2处理了consumer2就可以使用 XACK 命令通知 Streams，然后这条消息就会被删除")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XPENDING%E6%9F%A5%E7%9C%8B%E6%B6%88%E8%B4%B9%E7%BB%84%E5%85%B7%E4%BD%93%E8%AF%BB%E5%8F%96%E7%9A%84%E6%95%B0%E6%8D%AE2.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("XACK")]),E._v(" "),B("p",[E._v("向消息队列确认消息处理已完成")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XACK1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8D%E6%B6%88%E8%B4%B9%E7%BB%84%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4XACK2.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("XINFO 用于打印 Stream\\Consumer\\Group 的详细信息")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E6%B5%81Stream/Redis%E6%B5%81%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%93%8DXINFO%E6%BC%94%E7%A4%BA.png",alt:""}})])])])]),E._v(" "),B("li",[B("p",[E._v("使用建议")]),E._v(" "),B("p",[E._v("Stream 还是不能 100% 等价于 Kafka、RabbitMQ 来使用时，生产案例少，慎用")])])]),E._v(" "),B("h4",{attrs:{id:"_4-11-redis-位域-bitfield"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-11-redis-位域-bitfield"}},[E._v("#")]),E._v(" 4.11 Redis 位域（bitfield）")]),E._v(" "),B("ol",[B("li",[B("p",[E._v("是什么")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("官网")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%98%AF%E4%BB%80%E4%B9%88%E5%AE%98%E7%BD%91.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("https://redis.com.cn/commands/bitfield.html")])])])]),E._v(" "),B("li",[B("p",[E._v("能干嘛")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E8%83%BD%E5%B9%B2%E5%98%9B.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("hello 等价于 0110100001100101011011000110110001101111")])]),E._v(" "),B("ul",[B("li",[E._v("位域修改")]),E._v(" "),B("li",[E._v("溢出控制")])])]),E._v(" "),B("li",[B("p",[E._v("一句话")]),E._v(" "),B("p",[E._v("将一个 Redis 字符串看作是一个由二进制位组成的数组，并能对变长位宽和任意没有字节对齐的指定整型位域进行寻址和修改")])]),E._v(" "),B("li",[B("p",[E._v("命令基本语法")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E5%91%BD%E4%BB%A4%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.png",alt:""}})]),E._v(" "),B("div",{staticClass:"language-redis extra-class"},[B("pre",{pre:!0,attrs:{class:"language-text"}},[B("code",[E._v("BITFIELD key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]\n")])])])]),E._v(" "),B("li",[B("p",[E._v("案例")]),E._v(" "),B("p",[E._v("Ascii 码表：https://ascii.org.cn/")]),E._v(" "),B("p",[E._v("基本命令代码实操")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("BITFIELD key [GET type offset]")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDGET1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDGET2.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDGET3.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("hello 等价于 0110100001100101011011000110110001101111")])]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDGET4.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("BITFIELD key [SET type offset value]")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDSET1.png",alt:""}})]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDSET2.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("BITFIELD key [INCRBY type offset increment]")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DBITFIELDINCRBY.png",alt:""}})]),E._v(" "),B("blockquote",[B("p",[E._v("默认情况下，INCRBY 使用 WRAP 参数")])])]),E._v(" "),B("li",[B("p",[E._v("溢出控制 OVERFLOW[WRAP|SAT|FAIL]")]),E._v(" "),B("ul",[B("li",[B("p",[E._v("WRAP：使用回绕（wrap around）方法处理有符号整数和无符号整数的溢出情况")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DOVERFLOW%E4%B8%ADWRAP.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("SAT：使用饱和计算（saturation arithmetic）方法处理溢出，下溢计算的结果为最小的整数值，而上溢计算的结果为最大的整数值")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DOVERFLOW%E4%B8%ADSAT.png",alt:""}})])]),E._v(" "),B("li",[B("p",[E._v("FAIL：命令将拒绝执行那些会导致上溢或者下溢情况出现的计算，并向用户返回空值表示计算未被执行")]),E._v(" "),B("p",[B("img",{attrs:{src:"Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%B0%9A%E7%A1%85%E8%B0%B7/Redis10%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%90%BD%E5%9C%B0%E5%BA%94%E7%94%A8/Redis%E4%BD%8D%E5%9F%9Fbitfield/Redis%E4%BD%8D%E5%9F%9F%E6%A1%88%E4%BE%8B%E5%9F%BA%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%93%8DOVERFLOW%E4%B8%ADFAIL.png",alt:""}})])])])])])])]),E._v(" "),B("h4",{attrs:{id:"_4-12-案例实战"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-案例实战"}},[E._v("#")]),E._v(" 4.12 案例实战")]),E._v(" "),B("p",[E._v("高级篇再见")]),E._v(" "),B("h2",{attrs:{id:"四、redis-持久化"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#四、redis-持久化"}},[E._v("#")]),E._v(" 四、Redis 持久化")]),E._v(" "),B("h2",{attrs:{id:"五、redis-事务"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#五、redis-事务"}},[E._v("#")]),E._v(" 五、Redis 事务")]),E._v(" "),B("h2",{attrs:{id:"六、redis-管道"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#六、redis-管道"}},[E._v("#")]),E._v(" 六、Redis 管道")]),E._v(" "),B("h2",{attrs:{id:"七、redis-发布订阅"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#七、redis-发布订阅"}},[E._v("#")]),E._v(" 七、Redis 发布订阅")]),E._v(" "),B("h2",{attrs:{id:"八、redis-复制-replica"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#八、redis-复制-replica"}},[E._v("#")]),E._v(" 八、Redis 复制（replica）")]),E._v(" "),B("h2",{attrs:{id:"九、redis-哨兵-sentinel"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#九、redis-哨兵-sentinel"}},[E._v("#")]),E._v(" 九、Redis 哨兵（sentinel）")]),E._v(" "),B("h2",{attrs:{id:"十、redis-集群-cluster"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#十、redis-集群-cluster"}},[E._v("#")]),E._v(" 十、Redis 集群（cluster）")]),E._v(" "),B("h2",{attrs:{id:"十一、springboot-集成-redis"}},[B("a",{staticClass:"header-anchor",attrs:{href:"#十一、springboot-集成-redis"}},[E._v("#")]),E._v(" 十一、SpringBoot 集成 Redis")])])}),[],!1,null,null,null);B.default=e.exports}}]);